[tool.poetry]
name = "delta-sync"
version = "0.0.1"
description = "Syncing delta tables"
authors = ["Peter van 't Hof' <pjrvanthof@gmail.com>"]

keywords = ["pydantic", "spark"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/ffinfo/delta-sync"
repository = "https://github.com/ffinfo/delta-sync"
include = [
    "LICENSE",
]


packages = [{ include = "delta_sync", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"

#spark
pyspark = {version=">=3.4.0,<3.5.0", optional=true}
delta-spark = "^2.4.0"


[tool.poetry.extras]
spark = ["pyspark"]

[tool.poetry.dev-dependencies]
coverage= {version=  "^7.3.0", extras=["toml"]}
pytest= "7.0.1"
pytest-mock="3.11.1"
pyproject-flake8 = "^6.0.0.post1"
isort ="^5.10.0"
pytest-cov= "^4.1.0"
mypy = "^1.5.1"
black = "^22.10.0"


[tool.black]
line-length = 120
target-version = ["py38"]

[tool.pytest.ini_options]
addopts = "--junitxml=junit/report.xml"
testpaths = ["tests"]
markers = "requires_database: requires postgresql"

[tool.coverage.report]
omit = ["tests/*", ".venv/*"]
precision = 2
show_missing = true

[tool.coverage.run]
command_line = "-m pytest -v tests/"
omit = ["tests/*",".venv/*"]

[tool.flake8]
max-line-length = 180
extend-exclude = ["deploy", ".venv"]
extend-ignore = "E203"

[tool.isort]
profile = "black"
line_length = 120

[tool.mypy]
files = "src/"
python_version = "3.9"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
