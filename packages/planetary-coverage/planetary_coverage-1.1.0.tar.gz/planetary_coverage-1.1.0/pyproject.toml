[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Poetry

[tool.poetry]
name = 'planetary-coverage'
version = '1.1.0'
description = 'Planetary coverage package'
license = "BSD 3-Clause License"
authors = [
    "Seignovert et al. <contact@planetary-coverage.org>",
]
readme = 'README.md'
documentation = 'https://docs.planetary-coverage.org'
repository = 'https://juigitlab.esac.esa.int/python/planetary-coverage'
keywords = ['planetary', 'coverage', 'spice', 'esa', 'juice']
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: BSD License',
    'Natural Language :: English',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Scientific/Engineering',
    'Topic :: Scientific/Engineering :: Astronomy',
    'Topic :: Scientific/Engineering :: Atmospheric Science',
]
packages = [{ include = "planetary_coverage", from = "src"}]

[tool.poetry.scripts]
mk-download = 'planetary_coverage.cli:cli_metakernel_download'
kernel-download = 'planetary_coverage.cli:cli_kernel_download'

[tool.poetry.urls]
"Bug Tracker" = 'https://juigitlab.esac.esa.int/python/planetary-coverage/-/issues'
"Changelog" = 'https://docs.planetary-coverage.org/en/latest/CHANGELOG.html'

# Package depedencies

[tool.poetry.dependencies]
python = "^3.9"
numpy = "^1.23.0"
matplotlib = "^3.7.2"
spiceypy = "^5.1.1"
Pillow = "^9.2.0"
esa-ptr = { version = "^1.0", optional = true }

[tool.poetry.extras]
juice = ["esa-ptr"]

# Tests depedencies

[tool.poetry.group.test.dependencies]
pylint = "^2.14.5"
flake8 = "^4.0.1"
flake8-isort = "^4.1.2"
flake8-print = "^5.0.0"
pep8-naming = "^0.13.1"
pytest = "^7.1.2"
pytest-cov = "^4.0.0"

# Docs depedencies

[tool.poetry.group.docs.dependencies]
Sphinx = "^4.5"
sphinx-copybutton = "^0.5.0"
sphinx-tabs = "3.3.1"
sphinx-book-theme = "^1.0.1"
sphinx-gallery = "^0.11.0"
myst-nb = "^0.16.0"
jupyterlab = "^3.5.0"
jupytext = "^1.14.1"
pypandoc = "^1.8.1"
sphinxcontrib-svg2pdfconverter = { version = "^1.2.0", extras = ["CairoSVG"]}
sphinx-autobuild = "^2021.3.14"

# Deployment depedencies

[tool.poetry.group.deploy.dependencies]
bump2version = "^1.0.1"

# Pylint configutation

[tool.pylint.main]
recursive = true

[tool.pylint."MESSAGES CONTROL"]
output-format = 'colorized'
disable = [
    'invalid-name', 'redefined-outer-name', 'too-many-arguments',
	'super-init-not-called', 'too-many-ancestors', 'too-few-public-methods',
	'too-many-statements', 'fixme', 'raise-missing-from',
    'consider-using-from-import',
]
ignored-argument-names = 'args|kwargs'
max-module-lines=2000
max-attributes = 24
max-locals = 20
max-args = 7
min-similarity-lines = 15  # `# pylint: disable=duplicate-code` is not available (https://github.com/PyCQA/pylint/issues/214)

# Flake8 configutation is in .flake8 (see https://github.com/PyCQA/flake8/issues/234)

# Pytest configuration

[tool.pytest.ini_options]
minversion = '6.0'
addopts = '--verbose --color=yes --cov=planetary_coverage --cov-report term-missing'
testpaths = ['tests']

# Pytest coverage configuration

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    'def __repr__',
    'pragma: no cover',
    'raise NotImplementedError',
]

# Isort configuration

[tool.isort]
lines_after_imports = 2
multi_line_output = 5
balanced_wrapping = true
reverse_relative = true
known_np = 'numpy'
known_plt = 'matplotlib'
known_sp = 'spiceypy'
known_test = 'pytest'
sections = ['FUTURE', 'STDLIB', 'NP', 'PLT', 'SP', 'TEST', 'THIRDPARTY', 'FIRSTPARTY', 'LOCALFOLDER']
