"use strict";(self.webpackChunkjupyter_fairly=self.webpackChunkjupyter_fairly||[]).push([[460],{460:(e,t,a)=>{a.r(t),a.d(t,{default:()=>b});var o=a(299),n=a(745),r=a(303),s=a(526),c=a(122),i=a(344),l=a(139);async function d(e="",t={}){const a=l.ServerConnection.makeSettings(),o=i.URLExt.join(a.baseUrl,"jupyter-fairly",e);let n;try{n=await l.ServerConnection.makeRequest(o,t,a)}catch(e){throw new l.ServerConnection.NetworkError(e)}let r=await n.text();if(r.length>0)try{r=JSON.parse(r)}catch(e){console.log("Not a JSON response body.",n)}if(!n.ok)throw new l.ServerConnection.ResponseError(n,r.message||r);return r}var u=a(832);class m extends u.Widget{constructor(){super({node:m.createFormNode()})}getValue(){return this.node.querySelector("input").value.trim()}static createFormNode(){const e=document.createElement("div"),t=document.createElement("label"),a=document.createElement("input"),o=document.createElement("span");return e.className="jp-RedirectForm",o.textContent="Enter URL or DOI: ",a.placeholder="https://doi.org/xx.x/xx.vx",t.appendChild(o),t.appendChild(a),e.appendChild(t),e}}const p={id:"@jupyter-fairly/clone",requires:[c.IFileBrowserFactory],autoStart:!0,activate:(e,t)=>{const a=t.tracker.currentWidget.model,o="cloneDataset";e.commands.addCommand(o,{label:"Clone Dataset",isEnabled:()=>!0,isVisible:()=>!0,icon:n.downloadIcon,execute:async()=>{const e=await(0,r.showDialog)({title:"Clone Dataset",body:new m,buttons:[r.Dialog.cancelButton({label:"Cancel"}),r.Dialog.okButton({label:"Clone"})],checkbox:{label:"Extract compressed files",caption:"Uncompress zip and tar.gz files",checked:!1}});if(e.button.accept&&e.value)try{!function(e,t,a=!1,o){let n=JSON.stringify({source:e,destination:"./".concat(t),extract:a,client:"4tu"});console.log("./".concat(t));const c=new s.PromiseDelegate;d("clone",{method:"POST",body:n}).then((e=>{console.log(e),c.resolve({complete:"complete"})})).catch((e=>{c.reject({failed:"failed"}),(0,r.showErrorMessage)("Error when cloning dataset",e)})),r.Notification.promise(c.promise,{pending:{message:"Cloning dataset...",options:{autoClose:!1}},success:{message:e=>`Clonning ${e.complete}.`,options:{autoClose:3e3}},error:{message:()=>"Cloning failed."}})}(e.value,a.path,e.isChecked),console.log("accepted"),await a.refresh()}catch(e){console.error("Encontered an error when cloning the dataset: ",e)}else console.log("rejected")}}),e.contextMenu.addItem({command:o,selector:".jp-DirListing-content",rank:103})}},g={id:"@jupyter-fairly/create-dataset",requires:[c.IFileBrowserFactory],autoStart:!0,activate:(e,t)=>{const a=t.tracker.currentWidget.model,o="createDatasetCommand";e.commands.addCommand(o,{label:"Create Fairly Dataset",isEnabled:()=>!0,isVisible:()=>!0,icon:n.addIcon,execute:async()=>{console.log(`the path is: ${a.path}`);let e=await r.InputDialog.getItem({title:"Select template for dataset's metadata",items:["","Default","4TU.Research","Zenodo","Figshare"],okLabel:"Create"});e.button.accept&&e.value?(console.log(`the path is: ${a.path}`),function(e,t){let a="";"4TU.Research"===t||"Figshare"===t?a="figshare":"Zenodo"===t?a="zenodo":null!=t&&"Default"!==t||(a="default"),console.log("./".concat(e)),d("newdataset",{method:"POST",body:JSON.stringify({path:"./".concat(e),template:a})}).then((e=>{console.log(e)})).catch((e=>{console.error(`${e}`),(0,r.showErrorMessage)("Error: Has the dataset been initilized already?",e)}))}(a.path,e.value),await a.refresh()):console.log("rejected")}}),e.contextMenu.addItem({command:o,selector:".jp-DirListing-content",rank:100})}},h={id:"@jupyter-fairly/metadata",requires:[c.IFileBrowserFactory],autoStart:!0,activate:(e,t)=>{const a=t.tracker.currentWidget.model,o="openManifestCommand";e.commands.addCommand(o,{label:"Edit Dataset Metadata",isEnabled:()=>!0,isVisible:()=>!0,icon:n.editIcon,execute:()=>{const e="./".concat(a.path).concat("/manifest.yaml");try{a.manager.open(e)}catch(e){(0,r.showErrorMessage)("Error Opening manifest.yalm",e)}}}),e.contextMenu.addItem({command:o,selector:".jp-DirListing-content",rank:101})}},y={id:"@jupyter-fairly/upload",requires:[c.IFileBrowserFactory],autoStart:!0,activate:(e,t)=>{console.log("uploadDatasetPlugin activated!!");const a=t.tracker.currentWidget.model,o="uploadDataset";e.commands.addCommand(o,{label:"Upload Dataset",isEnabled:()=>!0,isVisible:()=>!0,icon:n.fileUploadIcon,execute:async()=>{let e=await r.InputDialog.getItem({title:"Select Data Repository",items:["4TU.ResearchData","Zenodo","Figshare"],okLabel:"Continue"});if(e.button.accept&&e.value){if(!(await r.InputDialog.getBoolean({title:"Do you want to upload the dataset?",label:`Yes, upload metadata and files to ${e.value}`})).button.accept)return void console.log("do not archive");console.log("uploading dataset"),function(e,t){var a;"4TU.ResearchData"===t?a="4tu":"Zenodo"===t?a="zenodo":"Figshare"===t&&(a="figshare");let o=JSON.stringify({directory:"./".concat(e),client:a});const n=new s.PromiseDelegate;d("upload",{method:"POST",body:o}).then((e=>{console.log(e),n.resolve({complete:"complete"})})).catch((e=>{n.reject({failed:"failed"}),(0,r.showErrorMessage)("Error when uploading dataset",e)})),r.Notification.promise(n.promise,{pending:{message:"Uploading dataset...",options:{autoClose:!1}},success:{message:e=>`Dataset upload ${e.complete}.`,options:{autoClose:3e3}},error:{message:()=>"Upload failed."}})}(a.path,e.value)}else console.log("rejected")}}),e.contextMenu.addItem({command:o,selector:".jp-DirListing-content",rank:104})}},f={id:"@jupyter-fairly/mainmenu",requires:[c.IFileBrowserFactory],autoStart:!0,activate:e=>{console.log("registerTokenPlugin activated!!"),e.commands.addCommand("registerAccessToken",{label:"Add Repository Token",isEnabled:()=>!0,isVisible:()=>!0,icon:n.settingsIcon,execute:async()=>{let e=await r.InputDialog.getItem({title:"Register Access Token. Select Data Repository",items:["4TU.ResearchData","Zenodo","Figshare"],okLabel:"Continue"});var t,a,o;if(e.button.accept&&e.value){let n=await r.InputDialog.getText({title:"Enter Access Token for: ".concat(e.value),placeholder:"Access Token",okLabel:"Add Token"});if(!n.button.accept)return void console.log("operation was canceled by the user");console.log("registering token"),t=e.value,a=n.value,"4TU.ResearchData"===t?o="4tu":"Zenodo"===t?o="zenodo":"Figshare"===t&&(o="figshare"),d("repo-token",{method:"POST",body:JSON.stringify({client:o,token:a})}).then((e=>{console.log(e),r.Notification.success("Access Token registered successfully.",{autoClose:3e3})})).catch((e=>{(0,r.showErrorMessage)("Error when registering access token",e)}))}else console.log("canceled")}}),e.commands.addCommand("fairly:openURL",{label:"Fairly Documentation",caption:"Fairly Documentation",execute:e=>{window.open(`${e.url}`,"_blank")}})}},b=[{id:"@jupyter-fairly:plugin",autoStart:!0,requires:[],optional:[o.ISettingRegistry],activate:e=>{console.log("JupyterLab extension jupyter-fairly is activated!")}},g,h,y,p,f]}}]);