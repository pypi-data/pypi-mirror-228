digraph "classes_janis_core" {
charset="utf-8"
rankdir=BT
"0" [label="{AddOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"1" [label="{AliasSelector|data_type : Int, String, UnionType, Float, Array, Boolean\linner_selector\l|returntype()\lto_string_formatter()\l}", shape="record"];
"2" [label="{AndOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"3" [label="{ApplyPrefixOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"5" [label="{AsBoolOperator|\l|apply_to(value)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"6" [label="{AsFloatOperator|\l|apply_to(value)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"7" [label="{AsIntOperator|\l|apply_to(value)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"8" [label="{AsStringOperator|\l|apply_to(value)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"9" [label="{AssertNotNull|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"10" [label="{BasenameOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"12" [label="{Boolean|optional : bool, NoneType\l|coerce_value_if_possible(value)\ldoc()\linput_field_from_input(meta)\linvalid_value_hint(meta)\lname()\lprimitive()\lvalidate_value(meta, allow_null_if_not_optional)\l}", shape="record"];
"14" [label="{CeilOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"19" [label="{CpuSelector|\l|get_value_from_tool(tool, hints)\l}", shape="record"];
"24" [label="{DiskSelector|\l|get_value_from_tool(tool, hints)\l}", shape="record"];
"25" [label="{DivideOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"32" [label="{EqualityOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"35" [label="{FileSizeOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"37" [label="{FilterNullOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"38" [label="{FirstOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"39" [label="{FlattenOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"41" [label="{FloorOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"42" [label="{GtOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"43" [label="{GteOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"47" [label="{If|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"49" [label="{IndexOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"50" [label="{InequalityOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"53" [label="{InputNodeSelector|input_node\l|id()\lreturntype()\lto_string_formatter()\l}", shape="record"];
"55" [label="{InputSelector|input_to_select\lremove_file_extension : NoneType\ltype_hint\l|returntype()\lto_string_formatter()\l}", shape="record"];
"61" [label="{IsDefined|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"65" [label="{JoinOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"66" [label="{LengthOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"69" [label="{LtOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"70" [label="{LteOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"71" [label="{MemorySelector|\l|get_value_from_tool(tool, hints)\l}", shape="record"];
"73" [label="{MultiplyOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"79" [label="{NotOperator|\l|apply_to(value)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"80" [label="{Operator|args : list\l|argtypes()\levaluate(inputs)\levaluate_arg(arg, inputs)\lfriendly_signature()\lget_leaves()\lrequires_contents()\lrewrite_operator(args_to_rewrite)\lsubstitute_arg(args_to_rewrite, arg)\lto_cwl(unwrap_operator)\lto_string_formatter()\lto_wdl(unwrap_operator)\lvalidate(perform_typecheck)\l}", shape="record"];
"81" [label="{OrOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"87" [label="{ReadContents|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lrequires_contents()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"90" [label="{ResourceSelector|default : NoneType\lresource_type\l|get_operation(tool, hints)\lget_value_from_tool(tool, hints)\l}", shape="record"];
"92" [label="{RoundOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"95" [label="{Selector|\l|add(other)\land_(other)\las_bool()\las_float()\las_int()\las_str()\las_type(data_type)\lassert_not_null()\lbasename()\lcontents()\ldivide(other)\lequals(other)\lfile_size()\lflattened()\lgreater_than(other)\lgreater_than_or_equals(other)\lis_not_null()\lis_null()\lis_selector()\ljoined(separator)\llength()\lless_than(other)\lless_than_or_equals(other)\lmultiply(other)\lnegate()\lnot_equals(other)\lop_and(other)\lop_or(other)\lor_(other)\lrequires_contents()\lreturntype()\lsubtract(other)\lto_string_formatter()\l}", shape="record"];
"96" [label="{SingleValueOperator|\l|apply_to(value)\lcwl_symbol()\levaluate(inputs)\lsymbol()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\lwdl_symbol()\l}", shape="record"];
"100" [label="{StepOutputSelector|node\ltag\l|from_tuple(step_tuple)\lreturntype()\lto_string_formatter()\l}", shape="record"];
"103" [label="{StringFormatter|kwargs : dict\lresolved_types : list\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lgenerate_combinations_of_input_dicts(values_that_are_lists)\lget_leaves()\lresolve_with_resolved_values()\lreturntype()\lrewrite_operator(args_to_rewrite)\lto_cwl(unwrap_operator)\lto_string_formatter()\lto_wdl(unwrap_operator)\lvalidate(perform_typecheck)\l}", shape="record"];
"104" [label="{SubtractOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"112" [label="{TimeSelector|default : int\l|get_value_from_tool(tool, hints)\l}", shape="record"];
"125" [label="{TransposeOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"126" [label="{TwoValueOperator|\l|apply_to(arg1, arg2)\lcwl_symbol()\levaluate(inputs)\lsymbol()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\lwdl_symbol()\l}", shape="record"];
"130" [label="{WildcardSelector|select_first : bool\lwildcard\l|returntype()\lto_string_formatter()\l}", shape="record"];
"0" -> "126" [arrowhead="empty", arrowtail="none"];
"1" -> "95" [arrowhead="empty", arrowtail="none"];
"2" -> "126" [arrowhead="empty", arrowtail="none"];
"5" -> "96" [arrowhead="empty", arrowtail="none"];
"6" -> "96" [arrowhead="empty", arrowtail="none"];
"7" -> "96" [arrowhead="empty", arrowtail="none"];
"8" -> "96" [arrowhead="empty", arrowtail="none"];
"9" -> "80" [arrowhead="empty", arrowtail="none"];
"14" -> "80" [arrowhead="empty", arrowtail="none"];
"19" -> "90" [arrowhead="empty", arrowtail="none"];
"24" -> "90" [arrowhead="empty", arrowtail="none"];
"25" -> "126" [arrowhead="empty", arrowtail="none"];
"32" -> "126" [arrowhead="empty", arrowtail="none"];
"41" -> "80" [arrowhead="empty", arrowtail="none"];
"42" -> "126" [arrowhead="empty", arrowtail="none"];
"43" -> "126" [arrowhead="empty", arrowtail="none"];
"47" -> "80" [arrowhead="empty", arrowtail="none"];
"49" -> "80" [arrowhead="empty", arrowtail="none"];
"50" -> "126" [arrowhead="empty", arrowtail="none"];
"53" -> "95" [arrowhead="empty", arrowtail="none"];
"55" -> "95" [arrowhead="empty", arrowtail="none"];
"61" -> "80" [arrowhead="empty", arrowtail="none"];
"69" -> "126" [arrowhead="empty", arrowtail="none"];
"70" -> "126" [arrowhead="empty", arrowtail="none"];
"71" -> "90" [arrowhead="empty", arrowtail="none"];
"73" -> "126" [arrowhead="empty", arrowtail="none"];
"79" -> "96" [arrowhead="empty", arrowtail="none"];
"81" -> "126" [arrowhead="empty", arrowtail="none"];
"90" -> "55" [arrowhead="empty", arrowtail="none"];
"92" -> "80" [arrowhead="empty", arrowtail="none"];
"96" -> "80" [arrowhead="empty", arrowtail="none"];
"100" -> "95" [arrowhead="empty", arrowtail="none"];
"104" -> "126" [arrowhead="empty", arrowtail="none"];
"112" -> "90" [arrowhead="empty", arrowtail="none"];
"126" -> "80" [arrowhead="empty", arrowtail="none"];
"130" -> "95" [arrowhead="empty", arrowtail="none"];
"35" -> "80" [arrowhead="empty", arrowtail="none"];
"37" -> "80" [arrowhead="empty", arrowtail="none"];
"38" -> "80" [arrowhead="empty", arrowtail="none"];
"39" -> "80" [arrowhead="empty", arrowtail="none"];
"65" -> "80" [arrowhead="empty", arrowtail="none"];
"66" -> "80" [arrowhead="empty", arrowtail="none"];
"87" -> "80" [arrowhead="empty", arrowtail="none"];
"103" -> "80" [arrowhead="empty", arrowtail="none"];
"125" -> "80" [arrowhead="empty", arrowtail="none"];
"3" -> "80" [arrowhead="empty", arrowtail="none"];
"10" -> "80" [arrowhead="empty", arrowtail="none"];
"80" -> "95" [arrowhead="empty", arrowtail="none"];
}