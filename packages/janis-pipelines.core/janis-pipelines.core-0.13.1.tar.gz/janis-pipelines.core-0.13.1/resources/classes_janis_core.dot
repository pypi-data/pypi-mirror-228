digraph "classes_janis_core" {
charset="utf-8"
rankdir=BT
"0" [label="{AddOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"1" [label="{AliasSelector|data_type : Int, String, UnionType, Float, Array, Boolean\linner_selector\l|returntype()\lto_string_formatter()\l}", shape="record"];
"2" [label="{AndOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"3" [label="{ApplyPrefixOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"4" [label="{Array|optional : bool, NoneType\l|can_receive_from(other, source_has_default)\lcwl_input(value)\lcwl_type(has_default)\ldoc()\lfundamental_type()\lid()\linput_field_from_input(meta)\linvalid_value_hint(meta)\lis_array()\lmap_cwl_type(parameter)\lname()\lparse_value(valuetoparse)\lprimitive()\lreceived_type()\lschema(cls)\lsubtype()\lvalidate_value(meta, allow_null_if_not_optional)\lwdl(has_default)\l}", shape="record"];
"5" [label="{AsBoolOperator|\l|apply_to(value)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"6" [label="{AsFloatOperator|\l|apply_to(value)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"7" [label="{AsIntOperator|\l|apply_to(value)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"8" [label="{AsStringOperator|\l|apply_to(value)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"9" [label="{AssertNotNull|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"10" [label="{BasenameOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"11" [label="{BatchRunTool|fields : set\lgroup_by : NoneType\linner\l|constructor()\lfriendly_name()\lid()\l}", shape="record"];
"12" [label="{Boolean|optional : bool, NoneType\l|coerce_value_if_possible(value)\ldoc()\linput_field_from_input(meta)\linvalid_value_hint(meta)\lname()\lprimitive()\lvalidate_value(meta, allow_null_if_not_optional)\l}", shape="record"];
"13" [label="{CaptureType|CHROMOSOME : str\lEXOME : str\lNINETYX : str\lTARGETED : str\lTHIRTYX : str\lTHREEHUNDREDX : str\l|key()\lsymbols()\l}", shape="record"];
"14" [label="{CeilOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"15" [label="{CodeTool|\l|base_command()\lcontainer()\lcontainers()\lcpus(hints)\ldisk(hints)\lgenerate_inputs_override(additional_inputs, with_resource_overrides, hints, include_defaults, values_to_ignore, quality_type)\lid()\linputs()\lmemory(hints)\loutputs()\lprepared_script(translation)\lscript_name()\ltime(hints)\ltool_inputs()\ltool_outputs()\ltranslate(translation, to_console, to_disk, export_path, with_docker, with_resource_overrides, allow_empty_container, container_override)\ltype(cls)\lversion()\lwrapped_in_wf()\l}", shape="record"];
"16" [label="{CommandTool|\l|all_input_keys()\larguments()\lbase_command()\lcontainer()\lcontainers()\lcpus(hints)\ldirectories_to_create()\ldisk(hints)\lenv_vars()\lfiles_to_create()\lfull_name()\lgenerate_inputs_override(additional_inputs, with_resource_overrides, hints, include_defaults, values_to_ignore, quality_type)\lhelp()\lid()\linputs()\lmemory(hints)\loutputs()\ltime(hints)\ltool()\ltool_inputs()\ltool_outputs()\ltranslate(translation, to_console, to_disk, export_path, with_docker, with_resource_overrides, allow_empty_container, container_override)\ltype(cls)\lversion()\lwrapped_in_wf()\l}", shape="record"];
"17" [label="{CommandToolBuilder|\l|arguments()\lbase_command()\lcontainer()\lcpus(hints)\ldirectories_to_create()\ldisk(hints)\lenv_vars()\lfiles_to_create()\lfriendly_name()\linputs()\lmemory(hints)\loutputs()\ltime(hints)\ltool()\ltool_module()\ltool_provider()\lversion()\l}", shape="record"];
"19" [label="{CpuSelector|\l|get_value_from_tool(tool, hints)\l}", shape="record"];
"21" [label="{CwlTranslator|\l|build_initial_workdir_from_tool(cls, tool)\lbuild_inputs_file(cls, tool, recursive, merge_resources, hints, additional_inputs, max_cores, max_mem, max_duration)\lconvert_operator_to_commandtool(cls, step_id, operators, tool, select_first_element, use_command_line_tool)\linputs_filename(workflow)\lprepare_output_eval_for_python_codetool(tag, outtype)\lquote_values_if_code_environment(cls, value, is_code_environment)\lresources_filename(workflow)\lstringify_commentedmap(m)\lstringify_translated_inputs(inputs)\lstringify_translated_tool(tool, should_format, as_json)\lstringify_translated_workflow(wf, should_format, as_json)\ltool_filename(tool)\ltranslate_code_tool_internal(cls, tool, with_docker, allow_empty_container, container_override)\ltranslate_tool_internal(cls, tool, with_container, with_resource_overrides, allow_empty_container, container_override)\ltranslate_workflow(cls, wf, with_container, with_resource_overrides, is_nested_tool, is_packed, allow_empty_container, container_override)\ltranslate_workflow_to_all_in_one(cls, wf, with_resource_overrides, is_nested_tool, allow_empty_container, container_override)\lunwrap_expression(cls, value, code_environment, selector_override, tool, for_output, inputs_dict)\lunwrap_selector_for_reference(cls, value)\lvalidate_command_for(wfpath, inppath, tools_dir_path, tools_zip_path)\lworkflow_filename(workflow)\lwrap_in_codeblock_if_required(cls, value, is_code_environment)\l}", shape="record"];
"22" [label="{DataType|is_prim\loptional : bool\l|can_receive_from(other, source_has_default)\lcoerce_value_if_possible(value)\lcopy()\lcwl_input(value)\lcwl_type(has_default)\ldoc()\lid()\lidentify()\linput_field_from_input(meta)\linvalid_value_hint(meta)\lis_array()\lis_base_type(base_type)\lmap_cwl_type(parameter)\lname()\lparse_value(valuetoparse)\lprimitive()\lreceived_type()\lsecondary_files()\lvalidate_value(meta, allow_null_if_not_optional)\lwdl(has_default)\l}", shape="record"];
"23" [label="{Directory|\l|cwl_input(value)\ldoc()\lget_value_from_meta(meta)\linput_field_from_input(meta)\linvalid_value_hint(meta)\lname()\lprimitive()\lschema(cls)\lvalidate_value(meta, allow_null_if_not_optional)\l}", shape="record"];
"24" [label="{DiskSelector|\l|get_value_from_tool(tool, hints)\l}", shape="record"];
"25" [label="{DivideOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"26" [label="{DocumentationMeta|doc\l|}", shape="record"];
"27" [label="{Double|\l|can_receive_from(other)\ldoc()\linput_field_from_input(meta)\linvalid_value_hint(meta)\lname()\lprimitive()\lschema(cls)\lvalidate_value(meta, allow_null_if_not_optional)\l}", shape="record"];
"29" [label="{DynamicWorkflow|has_constructed : bool\l|constructor(inputs, hints)\lmodify_inputs(inputs, hints)\l}", shape="record"];
"30" [label="{Edge|compatible_types : bool, NoneType\lfinish\lftag\lscatter\lsource\l|check_types()\lvalidate_tags()\l}", shape="record"];
"31" [label="{Engine|CROMWELL : str\l|key()\lsymbols()\l}", shape="record"];
"32" [label="{EqualityOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"34" [label="{File|alternate_extensions : NoneType\lextension : NoneType\loptional : bool, NoneType\l|can_receive_from(other, source_has_default)\lcwl_input(value)\ldoc()\lget_extensions()\lget_value_from_meta(meta)\linvalid_value_hint(meta)\lname()\lprimitive()\lschema(cls)\lvalidate_value(meta, allow_null_if_not_optional)\l}", shape="record"];
"35" [label="{FileSizeOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"36" [label="{Filename|extension : NoneType\lprefix : str\lsuffix : NoneType\l|can_receive_from(other, source_has_default)\lcwl_type(has_default)\ldoc()\lgenerated_filename(replacements)\lgenerated_filenamecwl()\linvalid_value_hint(meta)\lmap_cwl_type(parameter)\lname()\lprimitive()\lschema(cls)\lvalidate_value(meta, allow_null_if_not_optional)\lwdl(has_default)\l}", shape="record"];
"37" [label="{FilterNullOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"38" [label="{FirstOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"39" [label="{FlattenOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"40" [label="{Float|optional : bool, NoneType\l|coerce_value_if_possible(value)\ldoc()\linput_field_from_input(meta)\linvalid_value_hint(meta)\lname()\lprimitive()\lvalidate_value(meta, allow_null_if_not_optional)\l}", shape="record"];
"41" [label="{FloorOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"42" [label="{GtOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"43" [label="{GteOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"44" [label="{Hint|\l|key()\l}", shape="record"];
"45" [label="{HintArray|\l|items()\l}", shape="record"];
"46" [label="{HintEnum|\l|symbols()\l}", shape="record"];
"47" [label="{If|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"49" [label="{IndexOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"50" [label="{InequalityOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"51" [label="{InputDocumentation|example : NoneType\lquality : user\lskip_sourcing_secondary_files : bool\lsource : NoneType\l|try_parse_from(doc)\l}", shape="record"];
"52" [label="{InputNode|datatype\ldefault\ldoc : NoneType\lvalue\l|as_operator()\linputs()\loutputs()\l}", shape="record"];
"53" [label="{InputNodeSelector|input_node\l|id()\lreturntype()\lto_string_formatter()\l}", shape="record"];
"54" [label="{InputQualityType|\l|}", shape="record"];
"55" [label="{InputSelector|input_to_select\lremove_file_extension : NoneType\ltype_hint\l|returntype()\lto_string_formatter()\l}", shape="record"];
"56" [label="{Int|optional : bool, NoneType\l|coerce_value_if_possible(value)\ldoc()\linput_field_from_input(meta)\linvalid_value_hint(meta)\lname()\lprimitive()\lschema(cls)\lvalidate_value(meta, allow_null_if_not_optional)\l}", shape="record"];
"61" [label="{IsDefined|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"62" [label="{JanisShed|MAX_RECURSION_DEPTH : int\lrecognised_types : set\lshould_trace : bool\l|add_tool(tool)\ladd_type(datatype)\lget_all_datatypes()\lget_all_tools()\lget_by_class_name(name)\lget_datatype(datatype)\lget_tool(tool, version)\lget_transformation_graph()\lhydrate(force, modules)\lhydrate_datapoints()\lhydrate_from(modules)\lhydrate_tools()\lhydrate_transformations()\lprocess_cls(cls, seen_modules, seen_classes, current_layer)\ltraverse_module(module, seen_modules, seen_classes, current_layer)\l}", shape="record"];
"63" [label="{JanisTransformation|relevant_tool_input : NoneType\lrelevant_tool_output : NoneType\ltool\ltype1 : Boolean, Int, String, Array, Float, UnionType\ltype2 : Boolean, Array, Int, Float, UnionType, String\l|convert_transformations_to_workflow(transformations)\levaluate_tool_input(relevant_tool_input)\levaluate_tool_output(relevant_tool_output)\lid()\l}", shape="record"];
"64" [label="{JanisTransformationGraph|\l|add_edges(edges)\lbuild_workflow_to_translate(source_dt, desired_dt)\lfind_connection(source_dt, desired_dt)\lfind_connection_inner(source_dt, desired_dt)\ltrace(parent_mapping, start)\l}", shape="record"];
"65" [label="{JoinOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"66" [label="{LengthOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"69" [label="{LtOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"70" [label="{LteOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"71" [label="{MemorySelector|\l|get_value_from_tool(tool, hints)\l}", shape="record"];
"72" [label="{Metadata|DATE_FORMAT : str\lcitation : NoneType\lcontributors : list\ldateCreated\ldateUpdated\ldocumentation : NoneType\ldocumentationUrl : NoneType\ldoi : NoneType\linstitution : NoneType\lkeywords : NoneType\lsample_input_overrides : NoneType\lshort_documentation : NoneType\lversion : NoneType\l|get_dict(object_to_checksum)\lupdate()\l}", shape="record"];
"73" [label="{MultiplyOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"74" [label="{NativeTypes|all : list\lkArray : str\lkBool : str\lkDirectory : str\lkDouble : str\lkFile : str\lkFloat : str\lkInt : str\lkLong : str\lkStderr : str\lkStdout : str\lkStr : str\l|is_primitive(t)\lis_valid(t)\lmap_to_cwl(t)\lmap_to_primitive(t)\lmap_to_wdl(t)\l}", shape="record"];
"75" [label="{Node|depth : int\lidentifier\lnode_type\lsources : dict\lwf\l|id()\linputs()\loutputs()\lset_depth(depth)\l}", shape="record"];
"77" [label="{NodeType|\l|to_col(node_type)\lto_str(node_type)\l}", shape="record"];
"79" [label="{NotOperator|\l|apply_to(value)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"80" [label="{Operator|args : list\l|argtypes()\levaluate(inputs)\levaluate_arg(arg, inputs)\lfriendly_signature()\lget_leaves()\lrequires_contents()\lrewrite_operator(args_to_rewrite)\lsubstitute_arg(args_to_rewrite, arg)\lto_cwl(unwrap_operator)\lto_string_formatter()\lto_wdl(unwrap_operator)\lvalidate(perform_typecheck)\l}", shape="record"];
"81" [label="{OrOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"82" [label="{OutputDocumentation|\l|}", shape="record"];
"83" [label="{OutputNode|datatype\ldoc\lextension : NoneType\loutput_folder : NoneType\loutput_name : NoneType\lsource : StepOutputSelector\l|inputs()\loutputs()\l}", shape="record"];
"86" [label="{PythonTool|\l|base_command()\lcode_block()\lcontainer()\lgenerate_cli_binding_for_input(inp)\linputs()\lprepared_script(translation)\lscript_name()\l}", shape="record"];
"87" [label="{ReadContents|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lrequires_contents()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"88" [label="{Registry|registry : dict\l|get(type_name)\lobjects()\lregister(name, obj)\l}", shape="record"];
"90" [label="{ResourceSelector|default : NoneType\lresource_type\l|get_operation(tool, hints)\lget_value_from_tool(tool, hints)\l}", shape="record"];
"92" [label="{RoundOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"93" [label="{ScatterDescription|fields\llabels : map, NoneType, InputSelector\lmethod : NoneType\l|}", shape="record"];
"94" [label="{ScatterMethod|\l|cwl()\l}", shape="record"];
"95" [label="{Selector|\l|add(other)\land_(other)\las_bool()\las_float()\las_int()\las_str()\las_type(data_type)\lassert_not_null()\lbasename()\lcontents()\ldivide(other)\lequals(other)\lfile_size()\lflattened()\lgreater_than(other)\lgreater_than_or_equals(other)\lis_not_null()\lis_null()\lis_selector()\ljoined(separator)\llength()\lless_than(other)\lless_than_or_equals(other)\lmultiply(other)\lnegate()\lnot_equals(other)\lop_and(other)\lop_or(other)\lor_(other)\lrequires_contents()\lreturntype()\lsubtract(other)\lto_string_formatter()\l}", shape="record"];
"96" [label="{SingleValueOperator|\l|apply_to(value)\lcwl_symbol()\levaluate(inputs)\lsymbol()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\lwdl_symbol()\l}", shape="record"];
"97" [label="{Stderr|stderrname : NoneType\lsubtype : NoneType\l|id()\linvalid_value_hint(meta)\lname()\lprimitive()\lreceived_type()\lvalidate_value(meta, allow_null_if_not_optional)\l}", shape="record"];
"98" [label="{Stdout|subtype : NoneType\l|id()\linvalid_value_hint(meta)\lname()\lprimitive()\lreceived_type()\lvalidate_value(meta, allow_null_if_not_optional)\l}", shape="record"];
"99" [label="{StepNode|always_set : set\ldoc : NoneType\lhas_conditionals\lparent_has_conditionals : bool\lscatter : NoneType\ltool\lwhen : NoneType\l|get_item(item)\linputs()\loutputs()\l}", shape="record"];
"100" [label="{StepOutputSelector|node\ltag\l|from_tuple(step_tuple)\lreturntype()\lto_string_formatter()\l}", shape="record"];
"101" [label="{StepTagInput|finish\lftag\lmultiple_inputs : bool\lsource_map : list\l|add_source(operator, should_scatter)\lsource()\l}", shape="record"];
"102" [label="{String|optional : bool, NoneType\l|can_receive_from(other, source_has_default)\lcoerce_value_if_possible(value)\ldoc()\linput_field_from_input(meta)\linvalid_value_hint(meta)\lname()\lprimitive()\lschema(cls)\lvalidate_value(meta, allow_null_if_not_optional)\l}", shape="record"];
"103" [label="{StringFormatter|kwargs : dict\lresolved_types : list\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lgenerate_combinations_of_input_dicts(values_that_are_lists)\lget_leaves()\lresolve_with_resolved_values()\lreturntype()\lrewrite_operator(args_to_rewrite)\lto_cwl(unwrap_operator)\lto_string_formatter()\lto_wdl(unwrap_operator)\lvalidate(perform_typecheck)\l}", shape="record"];
"104" [label="{SubtractOperator|\l|apply_to(arg1, arg2)\largtypes()\lcwl_symbol()\lfriendly_signature()\lreturntype()\lsymbol()\lwdl_symbol()\l}", shape="record"];
"105" [label="{SupportedTranslation|\l|all()\lget_translator()\l}", shape="record"];
"106" [label="{TInput|default : NoneType\ldoc : NoneType\lintype : Float, Array, String, Int, Boolean, UnionType\ltag\l|id()\l}", shape="record"];
"107" [label="{TOutput|doc : NoneType\louttype : String, Float, Int, UnionType, Boolean, Array\ltag\l|id()\l}", shape="record"];
"108" [label="{TTestCase|input\lname\loutput\l|}", shape="record"];
"109" [label="{TTestExpectedOutput|array_index : NoneType\lexpected_file : NoneType\lexpected_value : NoneType\lfile_diff_source : NoneType\loperator\lpreprocessor\lsuffix : NoneType\ltag\l|}", shape="record"];
"110" [label="{TTestPreprocessor|\l|}", shape="record"];
"111" [label="{TaggedRegistry|default_tag\lregistry : dict\l|get(type_name, tag)\lobjects()\lregister(name, tag, obj)\ltag_or_default(tag)\l}", shape="record"];
"112" [label="{TimeSelector|default : int\l|get_value_from_tool(tool, hints)\l}", shape="record"];
"114" [label="{Tool|TEST_DATA_FOLDER : str\lconnections : dict\lmetadata : Metadata\l|all_input_keys()\lbind_metadata()\lcontainers()\ldoc()\lfriendly_name()\lgenerate_inputs_override(additional_inputs, with_resource_overrides, hints, include_defaults, values_to_ignore, quality_type)\lhelp()\lid()\linputs_map()\loutputs_map()\lskip_test(cls)\ltest_data_path(cls)\ltests()\ltool_inputs()\ltool_module()\ltool_outputs()\ltool_provider()\ltranslate(translation, with_docker, with_resource_overrides, allow_empty_container, container_override)\ltype(cls)\lversion()\lversioned_id()\l}", shape="record"];
"115" [label="{ToolArgument|doc\lexpr_pattern : str\lis_expression\lposition : int\lprefix : NoneType\lseparate_value_from_prefix : NoneType\lshell_quote : NoneType\lvalue\l|}", shape="record"];
"116" [label="{ToolEvaluator|STATUS_SKIPPED : str\l|evaluate(cls, tool)\levaluate_code_tool(cls, tool)\levaluate_command_tool(cls, tool)\levaluate_container(tool)\levaluate_friendly_name(tool)\levaluate_generic(cls, tool)\levaluate_metadata(tool)\levaluate_tool_module(tool)\levaluate_translation(tool)\levaluate_unittest_exists(tool)\levaluate_workflow(cls, wf)\l}", shape="record"];
"117" [label="{ToolInput|default : NoneType\ldoc : InputDocumentation\linput_type : String, Float, Array, Boolean, UnionType, Int\llocalise_file : NoneType\lprefix_applies_to_all_elements : NoneType\lpresents_as : NoneType\lsecondaries_present_as : NoneType\lseparator : NoneType\ltag\l|id()\l}", shape="record"];
"118" [label="{ToolMetadata|\l|}", shape="record"];
"119" [label="{ToolOutput|doc\loutput_type : String, Float, Array, UnionType, Boolean, Int\lpresents_as : NoneType\lsecondaries_present_as : NoneType\lselector : NoneType\ltag\l|id()\l}", shape="record"];
"120" [label="{ToolTestSuiteRunner|cached_input_files_dir\lconfig\loutput_dir\ltool\l|file_diff(expected_file_path, output_file_path, output_content)\lget_expected_value(test_logic)\lget_value_to_compare(test_logic, output_value)\lline_count(output_value, output_type)\lread_md5(file_path)\lrun(input, engine)\lrun_one_test_case(t, engine, output)\l}", shape="record"];
"123" [label="{TranslatorBase|name\l|build_inputs_file(cls, tool, recursive, merge_resources, hints, additional_inputs, max_cores, max_mem, max_duration)\lbuild_resources_input(cls, tool, hints, max_cores, max_mem, max_duration, inputs, prefix)\ldependencies_filename(workflow)\lfilename(cls, tool)\lget_container_override_for_tool(tool, container_override)\lget_resource_override_inputs()\lget_type(t)\linp_can_be_skipped(inp, override_value)\linputs_filename(workflow)\lresources_filename(workflow)\lstringify_translated_inputs(inputs)\lstringify_translated_tool(tool)\lstringify_translated_workflow(wf)\ltool_filename(tool)\ltranslate(tool, to_console, tool_to_console, with_resource_overrides, to_disk, write_inputs_file, export_path, should_validate, should_zip, merge_resources, hints, allow_null_if_not_optional, additional_inputs, max_cores, max_mem, max_duration, with_container, allow_empty_container, container_override)\ltranslate_code_tool(codetool, to_console, to_disk, export_path, with_docker, with_resource_overrides, allow_empty_container, container_override)\ltranslate_code_tool_internal(cls, tool, with_docker, allow_empty_container, container_override)\ltranslate_tool(tool, to_console, to_disk, export_path, with_container, with_resource_overrides, max_cores, max_mem, allow_empty_container, container_override)\ltranslate_tool_internal(cls, tool, with_container, with_resource_overrides, allow_empty_container, container_override)\ltranslate_workflow(cls, workflow, with_container, with_resource_overrides, allow_empty_container, container_override)\lunwrap_expression(cls, expression)\lvalidate_command_for(wfpath, inppath, tools_dir_path, tools_zip_path)\lvalidate_inputs(cls, inputs, allow_null_if_optional)\lworkflow_filename(workflow)\l}", shape="record"];
"124" [label="{TranslatorMeta|\l|}", shape="record"];
"125" [label="{TransposeOperator|\l|argtypes()\levaluate(inputs)\lfriendly_signature()\lreturntype()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\l}", shape="record"];
"126" [label="{TwoValueOperator|\l|apply_to(arg1, arg2)\lcwl_symbol()\levaluate(inputs)\lsymbol()\lto_cwl(unwrap_operator)\lto_wdl(unwrap_operator)\lwdl_symbol()\l}", shape="record"];
"127" [label="{UnionType|optional : bool, NoneType\lsubtypes : list\l|can_receive_from(other)\lcwl_type(has_default)\ldoc()\lget_extensions()\lid()\linvalid_value_hint()\lis_array()\lis_base_type(base_type)\lname()\lprimitive()\lvalidate_value()\lwdl(has_default)\l}", shape="record"];
"128" [label="{Validators|compiled_identifier\lextra_prohibited_keys : set\lidentifier_regex : str\lnonidentifier_regex : str\l|reason_for_failure(identifier)\ltransform_identifier_to_be_valid(identifier, replacement_char)\lvalidate_identifier(identifier)\l}", shape="record"];
"129" [label="{WdlTranslator|\l|add_runtimefield_overrides_for_wdl(cls, runtime_block, tool, inmap, with_resource_overrides)\lbuild_command_from_inputs(cls, toolinputs)\lbuild_commands_for_file_to_create(cls, tool)\lbuild_inputs_file(cls, tool, recursive, merge_resources, hints, additional_inputs, max_cores, max_mem, max_duration)\lbuild_resources_input(cls, tool, hints, max_cores, max_mem, max_duration, inputs, prefix, is_root)\linputs_filename(workflow)\lprepare_secondary_tool_outputs(cls, out, original_expression, expression, toolid)\lresources_filename(workflow)\lstringify_translated_inputs(inputs)\lstringify_translated_tool(tool)\lstringify_translated_workflow(wf)\ltool_filename(tool)\ltranslate_code_tool_internal(cls, tool, with_docker, with_resource_overrides, allow_empty_container, container_override)\ltranslate_tool_args(cls, toolargs, inpmap, tool)\ltranslate_tool_inputs(cls, toolinputs)\ltranslate_tool_internal(cls, tool, with_container, with_resource_overrides, allow_empty_container, container_override)\ltranslate_tool_outputs(cls, tooloutputs, inputsmap, tool)\ltranslate_workflow(cls, wfi, with_container, with_resource_overrides, is_nested_tool, allow_empty_container, container_override)\lunwrap_expression(cls, expression, inputsdict, string_environment, tool, for_output)\lunwrap_expression_for_output(cls, output, expression, inputsdict, string_environment)\lvalidate_command_for(wfpath, inppath, tools_dir_path, tools_zip_path)\lworkflow_filename(workflow)\lwrap_if_string_environment(value, string_environment)\l}", shape="record"];
"130" [label="{WildcardSelector|select_first : bool\lwildcard\l|returntype()\lto_string_formatter()\l}", shape="record"];
"131" [label="{Workflow|\l|constructor()\l}", shape="record"];
"132" [label="{WorkflowBase|connections : dict\lhas_multiple_inputs : bool\lhas_scatter : bool\lhas_subworkflow : bool\linput_nodes : dict\lnodes : dict\loutput_nodes : dict\lstep_nodes : dict\l|all_input_keys()\lapply_input_documentation(inputs, should_override, strict)\lcapture_outputs_from_step(step, output_prefix, default_output_name)\lconditional(stepid, conditions)\lcontainers()\lforward_inputs_from_tool(tool, inputs_to_forward, inputs_to_ignore, input_prefix)\lfriendly_name()\lgenerate_inputs_override(additional_inputs, with_resource_overrides, hints, include_defaults, values_to_ignore, quality_type)\lgenerate_resources_file(translation, hints, to_console)\lgenerate_resources_table(hints, to_console, to_disk, output_type)\lget_dot_plot(show, log_to_stdout, expand_subworkflows, persist_subworkflows, output_directory)\lget_dot_plot_internal(tool, graph, default_base_connection, prefix, expand_subworkflows, depth)\lget_step_ids_from_selector(selector)\lget_subworkflows()\lget_tools()\linput(identifier, datatype, default, value, doc)\loutput(identifier, datatype, source, output_folder, output_name, extension, doc)\lreport(to_console, tabulate_tablefmt)\lstep(identifier, tool, scatter, when, ignore_missing, doc)\ltool_inputs()\ltool_outputs()\ltranslate(translation, to_console, tool_to_console, to_disk, write_inputs_file, with_docker, with_hints, with_resource_overrides, validate, should_zip, export_path, merge_resources, hints, allow_null_if_not_optional, additional_inputs, max_cores, max_mem, max_duration, allow_empty_container, container_override)\ltype(cls)\lverify_identifier(identifier, component)\lverify_output_source_type(identifier, out, outtype)\lversion()\l}", shape="record"];
"133" [label="{WorkflowBuilder|connections : dict\l|bind_metadata()\lconstructor()\lfriendly_name()\lid()\ltool_module()\ltool_provider()\lversion()\l}", shape="record"];
"134" [label="{WorkflowMetadata|\l|get_dict(object_to_checksum, ninputs, nsteps, noutputs)\l}", shape="record"];
"0" -> "126" [arrowhead="empty", arrowtail="none"];
"1" -> "95" [arrowhead="empty", arrowtail="none"];
"2" -> "126" [arrowhead="empty", arrowtail="none"];
"5" -> "96" [arrowhead="empty", arrowtail="none"];
"6" -> "96" [arrowhead="empty", arrowtail="none"];
"7" -> "96" [arrowhead="empty", arrowtail="none"];
"8" -> "96" [arrowhead="empty", arrowtail="none"];
"9" -> "80" [arrowhead="empty", arrowtail="none"];
"13" -> "46" [arrowhead="empty", arrowtail="none"];
"14" -> "80" [arrowhead="empty", arrowtail="none"];
"17" -> "16" [arrowhead="empty", arrowtail="none"];
"19" -> "90" [arrowhead="empty", arrowtail="none"];
"24" -> "90" [arrowhead="empty", arrowtail="none"];
"25" -> "126" [arrowhead="empty", arrowtail="none"];
"27" -> "40" [arrowhead="empty", arrowtail="none"];
"29" -> "132" [arrowhead="empty", arrowtail="none"];
"31" -> "46" [arrowhead="empty", arrowtail="none"];
"32" -> "126" [arrowhead="empty", arrowtail="none"];
"36" -> "102" [arrowhead="empty", arrowtail="none"];
"41" -> "80" [arrowhead="empty", arrowtail="none"];
"42" -> "126" [arrowhead="empty", arrowtail="none"];
"43" -> "126" [arrowhead="empty", arrowtail="none"];
"45" -> "44" [arrowhead="empty", arrowtail="none"];
"46" -> "44" [arrowhead="empty", arrowtail="none"];
"47" -> "80" [arrowhead="empty", arrowtail="none"];
"49" -> "80" [arrowhead="empty", arrowtail="none"];
"50" -> "126" [arrowhead="empty", arrowtail="none"];
"51" -> "26" [arrowhead="empty", arrowtail="none"];
"53" -> "95" [arrowhead="empty", arrowtail="none"];
"55" -> "95" [arrowhead="empty", arrowtail="none"];
"61" -> "80" [arrowhead="empty", arrowtail="none"];
"69" -> "126" [arrowhead="empty", arrowtail="none"];
"70" -> "126" [arrowhead="empty", arrowtail="none"];
"71" -> "90" [arrowhead="empty", arrowtail="none"];
"73" -> "126" [arrowhead="empty", arrowtail="none"];
"79" -> "96" [arrowhead="empty", arrowtail="none"];
"81" -> "126" [arrowhead="empty", arrowtail="none"];
"82" -> "26" [arrowhead="empty", arrowtail="none"];
"90" -> "55" [arrowhead="empty", arrowtail="none"];
"92" -> "80" [arrowhead="empty", arrowtail="none"];
"96" -> "80" [arrowhead="empty", arrowtail="none"];
"97" -> "34" [arrowhead="empty", arrowtail="none"];
"98" -> "34" [arrowhead="empty", arrowtail="none"];
"100" -> "95" [arrowhead="empty", arrowtail="none"];
"104" -> "126" [arrowhead="empty", arrowtail="none"];
"112" -> "90" [arrowhead="empty", arrowtail="none"];
"117" -> "115" [arrowhead="empty", arrowtail="none"];
"118" -> "72" [arrowhead="empty", arrowtail="none"];
"126" -> "80" [arrowhead="empty", arrowtail="none"];
"130" -> "95" [arrowhead="empty", arrowtail="none"];
"131" -> "132" [arrowhead="empty", arrowtail="none"];
"133" -> "131" [arrowhead="empty", arrowtail="none"];
"134" -> "72" [arrowhead="empty", arrowtail="none"];
"132" -> "114" [arrowhead="empty", arrowtail="none"];
"15" -> "114" [arrowhead="empty", arrowtail="none"];
"16" -> "114" [arrowhead="empty", arrowtail="none"];
"21" -> "123" [arrowhead="empty", arrowtail="none"];
"129" -> "123" [arrowhead="empty", arrowtail="none"];
"86" -> "15" [arrowhead="empty", arrowtail="none"];
"35" -> "80" [arrowhead="empty", arrowtail="none"];
"37" -> "80" [arrowhead="empty", arrowtail="none"];
"38" -> "80" [arrowhead="empty", arrowtail="none"];
"39" -> "80" [arrowhead="empty", arrowtail="none"];
"65" -> "80" [arrowhead="empty", arrowtail="none"];
"66" -> "80" [arrowhead="empty", arrowtail="none"];
"87" -> "80" [arrowhead="empty", arrowtail="none"];
"103" -> "80" [arrowhead="empty", arrowtail="none"];
"125" -> "80" [arrowhead="empty", arrowtail="none"];
"3" -> "80" [arrowhead="empty", arrowtail="none"];
"10" -> "80" [arrowhead="empty", arrowtail="none"];
"75" -> "77" [arrowhead="empty", arrowtail="none"];
"75" -> "52" [arrowhead="empty", arrowtail="none"];
"75" -> "99" [arrowhead="empty", arrowtail="none"];
"75" -> "83" [arrowhead="empty", arrowtail="none"];
"52" -> "53" [arrowhead="empty", arrowtail="none"];
"99" -> "100" [arrowhead="empty", arrowtail="none"];
"63" -> "64" [arrowhead="empty", arrowtail="none"];
"115" -> "16" [arrowhead="empty", arrowtail="none"];
"116" -> "16" [arrowhead="empty", arrowtail="none"];
"119" -> "16" [arrowhead="empty", arrowtail="none"];
"23" -> "22" [arrowhead="empty", arrowtail="none"];
"34" -> "22" [arrowhead="empty", arrowtail="none"];
"56" -> "22" [arrowhead="empty", arrowtail="none"];
"4" -> "22" [arrowhead="empty", arrowtail="none"];
"12" -> "22" [arrowhead="empty", arrowtail="none"];
"40" -> "22" [arrowhead="empty", arrowtail="none"];
"56" -> "22" [arrowhead="empty", arrowtail="none"];
"102" -> "22" [arrowhead="empty", arrowtail="none"];
"127" -> "22" [arrowhead="empty", arrowtail="none"];
"106" -> "114" [arrowhead="empty", arrowtail="none"];
"107" -> "114" [arrowhead="empty", arrowtail="none"];
"80" -> "95" [arrowhead="empty", arrowtail="none"];
"88" -> "62" [arrowhead="empty", arrowtail="none"];
"123" -> "105" [arrowhead="empty", arrowtail="none"];
"94" -> "93" [arrowhead="empty", arrowtail="none"];
"93" -> "99" [arrowhead="empty", arrowtail="none"];
"22" -> "74" [arrowhead="empty", arrowtail="none"];
"30" -> "99" [arrowhead="empty", arrowtail="none"];
"101" -> "30" [arrowhead="empty", arrowtail="none"];
"62" -> "114" [arrowhead="empty", arrowtail="none"];
"54" -> "51" [arrowhead="empty", arrowtail="none"];
"111" -> "62" [arrowhead="empty", arrowtail="none"];
// "4" -> "4" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_t", style="solid"];
// "4" -> "97" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="subtype", style="solid"];
// "4" -> "98" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="subtype", style="solid"];
// "12" -> "4" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_t", style="solid"];
// "12" -> "97" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="subtype", style="solid"];
// "12" -> "98" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="subtype", style="solid"];
// "34" -> "97" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="subtype", style="solid"];
// "34" -> "98" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="subtype", style="solid"];
// "40" -> "4" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_t", style="solid"];
// "40" -> "97" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="subtype", style="solid"];
// "40" -> "98" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="subtype", style="solid"];
// "54" -> "51" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="quality", style="solid"];
// "56" -> "4" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_t", style="solid"];
// "56" -> "97" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="subtype", style="solid"];
// "56" -> "98" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="subtype", style="solid"];
// "102" -> "4" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_t", style="solid"];
// "102" -> "97" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="subtype", style="solid"];
// "102" -> "98" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="subtype", style="solid"];
// "124" -> "123" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="__metaclass__", style="solid"];
// "127" -> "4" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_t", style="solid"];
// "127" -> "97" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="subtype", style="solid"];
// "127" -> "98" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="subtype", style="solid"];
}
