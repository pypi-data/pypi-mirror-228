syntax = "proto3";

// See https://docs.microsoft.com/en-us/aspnet/core/grpc/versioning?view=aspnetcore-6.0 for what consitutes a breaking change
package ansys.api.additive.v0.simulation;

option csharp_namespace = "Ansys.Api.Additive.Simulation";

import "ansys/api/additive/v0/additive_domain.proto";

service SimulationService {
	rpc Simulate(SimulationRequest) returns (stream SimulationResponse);
	rpc UploadFile(stream UploadFileRequest) returns (stream UploadFileResponse);
	rpc DownloadFile(DownloadFileRequest) returns (stream DownloadFileResponse);
}

message SimulationResponse {
	string id = 1;
	oneof ResponseType {
		Progress progress = 10;
		MeltPool melt_pool = 11;
		PorosityResult porosity_result = 13;
		MicrostructureResult microstructure_result = 14;
		ThermalHistoryResult thermal_history_result = 15;
	}
}

message SimulationRequest {
	string id = 1;
	oneof Input {
		SingleBeadInput single_bead_input = 10;
		PorosityInput porosity_input = 11;
		MicrostructureInput microstructure_input = 12;
		ThermalHistoryInput thermal_history_input = 13;
	}
}

// UploadFileRequest is used to transfer a file in chunks from
// a client to the server. Each message should be <= 4MiB
// unless the gRPC max receive message size has been changed.
message UploadFileRequest {
	string name = 1; 		// file name on client
	uint64 total_size = 2; 	// total file size in bytes
	bytes content = 3; 		// chunk of file content
	string content_md5 = 4; // md5 hash of content
}

message UploadFileResponse {
	string remote_file_name = 1;
	Progress progress = 2;
}

message DownloadFileRequest {
	string remote_file_name = 1; // full path to file on server
}

// DownloadFileResponse is used to transfer a file in chunks from
// the server to a client. Content and content_md5 may be empty
// if only a progress message is sent.
message DownloadFileResponse {
	string file_name = 1; 	// name of file without path
	uint64 total_size = 2;	// total file size in bytes
	bytes content = 3;		// chunk of file content
	string content_md5 = 4; // md5 hash of content
	Progress progress = 10;	// download progress
}
