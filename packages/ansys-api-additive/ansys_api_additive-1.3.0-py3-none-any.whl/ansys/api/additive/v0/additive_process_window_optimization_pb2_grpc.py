# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ansys.api.additive.v0 import additive_process_window_optimization_pb2 as ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2


class ProcessWindowOptimizationServiceStub(object):
    """Additive process window related service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RefineLaserPower = channel.unary_unary(
                '/ansys.api.additive.process.ProcessWindowOptimizationService/RefineLaserPower',
                request_serializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.LaserPowerRange.SerializeToString,
                response_deserializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.ProcessWindowSpecification.FromString,
                )
        self.SpecifyLaserPower = channel.unary_unary(
                '/ansys.api.additive.process.ProcessWindowOptimizationService/SpecifyLaserPower',
                request_serializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.LaserPowerValues.SerializeToString,
                response_deserializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.ProcessWindowSpecification.FromString,
                )
        self.OptimizeProcess = channel.unary_stream(
                '/ansys.api.additive.process.ProcessWindowOptimizationService/OptimizeProcess',
                request_serializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.OptimizeProcessWindowSettings.SerializeToString,
                response_deserializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.OptimizeProcessWindowExecutionHeartbeat.FromString,
                )
        self.StopProcessWindowOptimization = channel.unary_unary(
                '/ansys.api.additive.process.ProcessWindowOptimizationService/StopProcessWindowOptimization',
                request_serializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.StopProcessWindowOptimizationSettings.SerializeToString,
                response_deserializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.OptimizeProcessWindowCompletionData.FromString,
                )


class ProcessWindowOptimizationServiceServicer(object):
    """Additive process window related service definition.
    """

    def RefineLaserPower(self, request, context):
        """Sets laser wattage
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpecifyLaserPower(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OptimizeProcess(self, request, context):
        """Turn on process window optimization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopProcessWindowOptimization(self, request, context):
        """Turn off process window optimization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProcessWindowOptimizationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RefineLaserPower': grpc.unary_unary_rpc_method_handler(
                    servicer.RefineLaserPower,
                    request_deserializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.LaserPowerRange.FromString,
                    response_serializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.ProcessWindowSpecification.SerializeToString,
            ),
            'SpecifyLaserPower': grpc.unary_unary_rpc_method_handler(
                    servicer.SpecifyLaserPower,
                    request_deserializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.LaserPowerValues.FromString,
                    response_serializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.ProcessWindowSpecification.SerializeToString,
            ),
            'OptimizeProcess': grpc.unary_stream_rpc_method_handler(
                    servicer.OptimizeProcess,
                    request_deserializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.OptimizeProcessWindowSettings.FromString,
                    response_serializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.OptimizeProcessWindowExecutionHeartbeat.SerializeToString,
            ),
            'StopProcessWindowOptimization': grpc.unary_unary_rpc_method_handler(
                    servicer.StopProcessWindowOptimization,
                    request_deserializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.StopProcessWindowOptimizationSettings.FromString,
                    response_serializer=ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.OptimizeProcessWindowCompletionData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.additive.process.ProcessWindowOptimizationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProcessWindowOptimizationService(object):
    """Additive process window related service definition.
    """

    @staticmethod
    def RefineLaserPower(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.additive.process.ProcessWindowOptimizationService/RefineLaserPower',
            ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.LaserPowerRange.SerializeToString,
            ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.ProcessWindowSpecification.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SpecifyLaserPower(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.additive.process.ProcessWindowOptimizationService/SpecifyLaserPower',
            ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.LaserPowerValues.SerializeToString,
            ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.ProcessWindowSpecification.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OptimizeProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.additive.process.ProcessWindowOptimizationService/OptimizeProcess',
            ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.OptimizeProcessWindowSettings.SerializeToString,
            ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.OptimizeProcessWindowExecutionHeartbeat.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopProcessWindowOptimization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.additive.process.ProcessWindowOptimizationService/StopProcessWindowOptimization',
            ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.StopProcessWindowOptimizationSettings.SerializeToString,
            ansys_dot_api_dot_additive_dot_v0_dot_additive__process__window__optimization__pb2.OptimizeProcessWindowCompletionData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
