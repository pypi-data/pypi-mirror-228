"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.additive.v0.additive_process_window_optimization_pb2
import grpc
import typing

class ProcessWindowOptimizationServiceStub:
    """Additive process window related service definition."""
    def __init__(self, channel: grpc.Channel) -> None: ...
    RefineLaserPower: grpc.UnaryUnaryMultiCallable[
        ansys.api.additive.v0.additive_process_window_optimization_pb2.LaserPowerRange,
        ansys.api.additive.v0.additive_process_window_optimization_pb2.ProcessWindowSpecification] = ...
    """Sets laser wattage"""

    SpecifyLaserPower: grpc.UnaryUnaryMultiCallable[
        ansys.api.additive.v0.additive_process_window_optimization_pb2.LaserPowerValues,
        ansys.api.additive.v0.additive_process_window_optimization_pb2.ProcessWindowSpecification] = ...

    OptimizeProcess: grpc.UnaryStreamMultiCallable[
        ansys.api.additive.v0.additive_process_window_optimization_pb2.OptimizeProcessWindowSettings,
        ansys.api.additive.v0.additive_process_window_optimization_pb2.OptimizeProcessWindowExecutionHeartbeat] = ...
    """Turn on process window optimization"""

    StopProcessWindowOptimization: grpc.UnaryUnaryMultiCallable[
        ansys.api.additive.v0.additive_process_window_optimization_pb2.StopProcessWindowOptimizationSettings,
        ansys.api.additive.v0.additive_process_window_optimization_pb2.OptimizeProcessWindowCompletionData] = ...
    """Turn off process window optimization"""


class ProcessWindowOptimizationServiceServicer(metaclass=abc.ABCMeta):
    """Additive process window related service definition."""
    @abc.abstractmethod
    def RefineLaserPower(self,
        request: ansys.api.additive.v0.additive_process_window_optimization_pb2.LaserPowerRange,
        context: grpc.ServicerContext,
    ) -> ansys.api.additive.v0.additive_process_window_optimization_pb2.ProcessWindowSpecification:
        """Sets laser wattage"""
        pass

    @abc.abstractmethod
    def SpecifyLaserPower(self,
        request: ansys.api.additive.v0.additive_process_window_optimization_pb2.LaserPowerValues,
        context: grpc.ServicerContext,
    ) -> ansys.api.additive.v0.additive_process_window_optimization_pb2.ProcessWindowSpecification: ...

    @abc.abstractmethod
    def OptimizeProcess(self,
        request: ansys.api.additive.v0.additive_process_window_optimization_pb2.OptimizeProcessWindowSettings,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.additive.v0.additive_process_window_optimization_pb2.OptimizeProcessWindowExecutionHeartbeat]:
        """Turn on process window optimization"""
        pass

    @abc.abstractmethod
    def StopProcessWindowOptimization(self,
        request: ansys.api.additive.v0.additive_process_window_optimization_pb2.StopProcessWindowOptimizationSettings,
        context: grpc.ServicerContext,
    ) -> ansys.api.additive.v0.additive_process_window_optimization_pb2.OptimizeProcessWindowCompletionData:
        """Turn off process window optimization"""
        pass


def add_ProcessWindowOptimizationServiceServicer_to_server(servicer: ProcessWindowOptimizationServiceServicer, server: grpc.Server) -> None: ...
