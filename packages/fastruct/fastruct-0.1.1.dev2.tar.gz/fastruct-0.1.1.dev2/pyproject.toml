[build-system]
requires = [
    "setuptools >= 65",
    "setuptools_scm[toml] >= 6.2",
    "wheel >= 0.38",
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "fastruct/_version.py"
local_scheme = "no-local-version"

[project]
name = "fastruct"
dynamic=["version"]
description = "Structural analysis and design made fast and simple"
readme = "README.md"
requires-python = ">=3.11"
keywords = ["python", "engineering", "structural engineering", "seismic", "structural design", "command line application", "cli"]
authors = [
    {name = "Mat√≠as Glasner", email = "mglasner10@gmail.com"},
]
license = {file = "LICENSE"}
urls = {source = "https://github.com/mglasner/fastruct"}
dependencies = [
    "typer[all]==0.9.0",
    "sqlalchemy==2.0.20"
]
scripts = { fastruct = "fastruct.__main__:main" }
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
]


[project.optional-dependencies]
dev = ["pytest", "Black", "Ruff"]

[tool.black]
  line-length = 120

[tool.curlylint.rules]
  image_alt = true

[tool.mypy]
  files                       = "**/*.py"
  check_untyped_defs          = true
  disallow_untyped_defs       = true
  disallow_incomplete_defs    = true
  disallow_untyped_decorators = true
  warn_return_any             = true
  warn_unused_ignores         = true
  no_implicit_optional        = true
  show_error_codes            = true
  plugins                     = "sqlalchemy.ext.mypy.plugin"

[tool.ruff]
  line-length = 120
  target-version = "py311"
  fix = true
  unfixable = ["F401", "F841"]
  ignore = ["E711", "E712", "N805", "PLR0913"]
  exclude = ["migrations"]
  select = [
    "F", # Pyflakes
    "E", # Pycodestyle
    "W", # Pycodestyle
    "I", # isort
    "B", # flake8-bugbear
    "Q", # flake8-quotes
    "D", # pydocstyle
    "N", # pep8-naming
    "UP", # pyupgrade
    "PL", # Pylint
  ]

[tool.ruff.pydocstyle]
  convention = "google"

[tool.ruff.mccabe]
  # Flag errors (`C901`) whenever the complexity level exceeds 5.
  max-complexity = 5

[tool.ruff.per-file-ignores]
"*/tests/*" = ["PLR2004", "F401", "F811"]
"*/commands/*" = ["UP007", "D301", "D401", "D415"]

