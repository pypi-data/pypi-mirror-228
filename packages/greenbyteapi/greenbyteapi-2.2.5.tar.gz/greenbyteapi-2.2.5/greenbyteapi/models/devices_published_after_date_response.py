# -*- coding: utf-8 -*-

"""
    greenbyteapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class DevicesPublishedAfterDateResponse(object):

    """Implementation of the 'Devices Published After Date Response' model.

    TODO: type model description here.

    Attributes:
        number_of_devices (int): The id of a site.
        authorized_device_ids (list of int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "number_of_devices":'numberOfDevices',
        "authorized_device_ids":'authorizedDeviceIds'
    }

    def __init__(self,
                 number_of_devices=None,
                 authorized_device_ids=None):
        """Constructor for the DevicesPublishedAfterDateResponse class"""

        # Initialize members of the class
        self.number_of_devices = number_of_devices
        self.authorized_device_ids = authorized_device_ids


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        number_of_devices = dictionary.get('numberOfDevices')
        authorized_device_ids = dictionary.get('authorizedDeviceIds')

        # Return an object of this model
        return cls(number_of_devices,
                   authorized_device_ids)


