# -*- coding: utf-8 -*-

"""
    greenbyteapi

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class PredictRecommendation(object):

    """Implementation of the 'PredictRecommendation' model.

    A recommended action generated by Predict.

    Attributes:
        component (string): TODO: type description here.
        action (string): TODO: type description here.
        confidence (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "component":'component',
        "action":'action',
        "confidence":'confidence'
    }

    def __init__(self,
                 component=None,
                 action=None,
                 confidence=None):
        """Constructor for the PredictRecommendation class"""

        # Initialize members of the class
        self.component = component
        self.action = action
        self.confidence = confidence


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        component = dictionary.get('component')
        action = dictionary.get('action')
        confidence = dictionary.get('confidence')

        # Return an object of this model
        return cls(component,
                   action,
                   confidence)


