{"version":3,"file":"static/chunks/881.286227d139a0bb4c.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/NonIdealState.tsx","webpack://_N_E/../ui-components/src/components/Page.tsx","webpack://_N_E/../ui-components/src/components/PageHeader.tsx","webpack://_N_E/../ui-core/src/ui/Loading.tsx","webpack://_N_E/../ui-core/src/workspace/GuessJobLocationRoot.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import * as React from 'react';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Spinner} from './Spinner';\nimport {Subheading} from './Text';\n\nexport type NonIdealStateProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n> & {\n  icon?: 'error' | 'no-results' | 'spinner' | IconName;\n  title: string;\n  description?: React.ReactNode;\n  action?: React.ReactNode;\n  shrinkable?: boolean;\n};\n\nexport const NonIdealState: React.FC<NonIdealStateProps> = ({\n  title,\n  description,\n  icon,\n  action,\n  shrinkable,\n}) => {\n  const singleContentElement = [title, description, action].filter(Boolean).length === 1;\n\n  return (\n    <Box\n      flex={{gap: 20, alignItems: singleContentElement ? 'center' : 'flex-start'}}\n      background={Colors.Gray50}\n      padding={24}\n      style={{\n        margin: 'auto',\n        borderRadius: 8,\n        width: shrinkable ? 'initial' : 'max-content',\n        maxWidth: 500,\n      }}\n    >\n      {icon === 'spinner' ? (\n        <Spinner purpose=\"section\" />\n      ) : icon === 'no-results' ? (\n        <Icon name=\"search\" size={48} color={Colors.Gray400} />\n      ) : icon ? (\n        <Icon name={icon} size={48} color={Colors.Gray400} />\n      ) : null}\n      <Box\n        flex={{\n          gap: 8,\n          direction: 'column',\n          alignItems: 'flex-start',\n          shrink: 1,\n          grow: 1,\n        }}\n      >\n        {title && <Subheading style={{color: Colors.Gray900}}>{title}</Subheading>}\n        {description && <div style={{color: Colors.Gray500}}>{description}</div>}\n        {action}\n      </Box>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import {ApolloError, QueryResult} from '@apollo/client';\nimport {Box, NonIdealState, Spinner} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {ERROR_CODES_TO_SURFACE, errorCodeToMessage} from '../app/HTTPErrorCodes';\n\ninterface ILoadingProps<TData> {\n  queryResult: QueryResult<TData, any>;\n  children: (data: TData) => React.ReactNode;\n  renderError?: (error: ApolloError) => React.ReactNode;\n  allowStaleData?: boolean;\n  purpose: 'section' | 'page';\n}\n\nconst BLANK_LOADING_DELAY_MSEC = 500;\n\nexport const Loading = <TData extends Record<string, any>>(props: ILoadingProps<TData>) => {\n  const {children, purpose, allowStaleData = false, renderError} = props;\n  const {error, data, loading} = props.queryResult;\n\n  const [blankLoading, setBlankLoading] = React.useState(true);\n  const isLoading = !data || (loading && !allowStaleData) || Object.keys(data as any).length === 0;\n\n  React.useEffect(() => {\n    let timer: ReturnType<typeof setTimeout> | undefined;\n\n    // Wait a brief moment so that we don't awkwardly flash the loading bar.\n    // This is often enough time for data to become available.\n    if (isLoading) {\n      timer = setTimeout(() => setBlankLoading(false), BLANK_LOADING_DELAY_MSEC);\n    } else {\n      setBlankLoading(true);\n    }\n\n    return () => {\n      timer && clearTimeout(timer);\n    };\n  }, [isLoading]);\n\n  // either error.networkError or error.graphQLErrors is set,\n  // so check that the error is not just a transient network error\n  if (error) {\n    if (renderError) {\n      return <>{renderError(error)}</>;\n    }\n\n    const {networkError} = error;\n    if (!networkError) {\n      return (\n        <Box padding={64} flex={{justifyContent: 'center'}}>\n          <NonIdealState icon=\"error\" title=\"GraphQL Error - see console for details\" />\n        </Box>\n      );\n    }\n\n    if ('statusCode' in networkError && ERROR_CODES_TO_SURFACE.has(networkError.statusCode)) {\n      const statusCode = networkError.statusCode;\n      return (\n        <Box padding={64} flex={{justifyContent: 'center'}}>\n          <NonIdealState\n            icon=\"error\"\n            title=\"Network error\"\n            description={errorCodeToMessage(statusCode)}\n          />\n        </Box>\n      );\n    }\n  }\n\n  if (isLoading) {\n    return blankLoading ? null : <LoadingSpinner purpose={purpose} />;\n  }\n\n  return <>{children(data as TData)}</>;\n};\n\nexport const LoadingSpinner: React.FC<{purpose: 'page' | 'section'}> = ({purpose}) => {\n  const isPage = purpose === 'page';\n  return (\n    <Box\n      padding={64}\n      flex={{\n        grow: isPage ? 1 : undefined,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      style={isPage ? {height: '100%'} : undefined}\n    >\n      <Spinner purpose={purpose} />\n    </Box>\n  );\n};\n\nLoading.defaultProps = {\n  purpose: 'page',\n};\n","import {\n  Alert,\n  Box,\n  NonIdealState,\n  Page,\n  PageHeader,\n  Table,\n  Heading,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, Redirect, useLocation, useParams, useRouteMatch} from 'react-router-dom';\n\nimport {useTrackPageView} from '../app/analytics';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {LoadingSpinner} from '../ui/Loading';\n\nimport {isThisThingAJob, optionToRepoAddress, useRepositoryOptions} from './WorkspaceContext';\nimport {buildRepoPathForHuman} from './buildRepoAddress';\nimport {findRepoContainingPipeline} from './findRepoContainingPipeline';\nimport {workspacePath, workspacePathFromAddress} from './workspacePath';\n\nexport const GuessJobLocationRoot = () => {\n  useTrackPageView();\n\n  const params = useParams<{jobPath: string}>();\n  const {jobPath} = params;\n\n  const entireMatch = useRouteMatch('/guess/(/?.*)');\n  const location = useLocation();\n\n  const toAppend = (entireMatch!.params as any)[0];\n  const {search} = location;\n\n  const {pipelineName} = explorerPathFromString(jobPath);\n  const {loading, options} = useRepositoryOptions();\n\n  if (loading) {\n    return <LoadingSpinner purpose=\"page\" />;\n  }\n\n  const reposWithMatch = findRepoContainingPipeline(options, pipelineName);\n  if (reposWithMatch.length === 0) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState\n          icon=\"no-results\"\n          title=\"No matching jobs\"\n          description={\n            <div>\n              <div>\n                <strong>{pipelineName}</strong>\n              </div>\n              was not found in any of your definitions.\n            </div>\n          }\n        />\n      </Box>\n    );\n  }\n\n  if (reposWithMatch.length === 1) {\n    const match = reposWithMatch[0]!;\n    const repoAddress = optionToRepoAddress(match);\n    const isJob = isThisThingAJob(match, pipelineName);\n    const to = workspacePathFromAddress(\n      repoAddress,\n      `/${isJob ? 'jobs' : 'pipelines'}/${toAppend}${search}`,\n    );\n    return <Redirect to={to} />;\n  }\n\n  const anyPipelines = reposWithMatch.some((repo) => !isThisThingAJob(repo, pipelineName));\n\n  return (\n    <Page>\n      <PageHeader\n        title={<Heading>{pipelineName}</Heading>}\n        icon=\"job\"\n        description={\n          anyPipelines\n            ? 'Job / pipeline in multiple code locations'\n            : 'Job in multiple code locations'\n        }\n      />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <Alert\n          intent=\"info\"\n          title={\n            <div>\n              {anyPipelines ? (\n                <>\n                  Jobs or pipelines named <strong>{pipelineName}</strong> were found in multiple\n                  code locations.\n                </>\n              ) : (\n                <>\n                  Jobs named <strong>{pipelineName}</strong> were found in multiple code locations.\n                </>\n              )}\n            </div>\n          }\n        />\n      </Box>\n      <Table>\n        <thead>\n          <tr>\n            <th>Code location</th>\n            <th>{anyPipelines ? 'Job / Pipeline' : 'Job'}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {reposWithMatch.map((repository) => {\n            const {\n              repository: {name},\n              repositoryLocation: {name: location},\n            } = repository;\n            const repoString = buildRepoPathForHuman(name, location);\n            return (\n              <tr key={repoString}>\n                <td style={{width: '40%'}}>{repoString}</td>\n                <td>\n                  <Link\n                    to={workspacePath(\n                      name,\n                      location,\n                      `/${\n                        isThisThingAJob(repository, pipelineName) ? 'jobs' : 'pipelines'\n                      }/${pipelineName}`,\n                    )}\n                  >\n                    {pipelineName}\n                  </Link>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default GuessJobLocationRoot;\n"],"names":["NonIdealState","param","title","description","icon","action","shrinkable","singleContentElement","filter","Boolean","length","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Box","flex","gap","alignItems","background","Colors","Gray50","padding","style","margin","borderRadius","width","maxWidth","jsx","Spinner","purpose","Icon","name","size","color","Gray400","direction","shrink","grow","Subheading","Gray900","div","Gray500","Page","styled","withConfig","PageHeader","props","tags","right","tabs","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","PageHeaderContainer","top","left","border","side","KeylineGray","justifyContent","bottom","wrap","Loading","children","allowStaleData","renderError","queryResult","error","data","loading","React","blankLoading","setBlankLoading","isLoading","_props_allowStaleData","Object","keys","timer","setTimeout","clearTimeout","Fragment","networkError","ERROR_CODES_TO_SURFACE","has","statusCode","errorCodeToMessage","LoadingSpinner","isPage","undefined","height","defaultProps","GuessJobLocationRoot","useTrackPageView","jobPath","params","useParams","entireMatch","useRouteMatch","location","useLocation","toAppend","search","pipelineName","explorerPathFromString","useRepositoryOptions","options","reposWithMatch","findRepoContainingPipeline","vertical","strong","match","repoAddress","optionToRepoAddress","isJob","isThisThingAJob","to","workspacePathFromAddress","concat","Redirect","anyPipelines","some","repo","Heading","horizontal","Alert","intent","Table","thead","tr","th","tbody","map","repository","repositoryLocation","repoString","buildRepoPathForHuman","td","Link","workspacePath","__webpack_exports__"],"sourceRoot":""}