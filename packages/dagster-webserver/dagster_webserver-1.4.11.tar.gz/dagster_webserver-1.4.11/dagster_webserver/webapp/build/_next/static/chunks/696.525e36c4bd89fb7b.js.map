{"version":3,"file":"static/chunks/696.525e36c4bd89fb7b.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/PageHeader.tsx","webpack://_N_E/../ui-core/src/instance/InstanceConfig.tsx","webpack://_N_E/../ui-core/src/nav/InstanceWarningIcon.tsx","webpack://_N_E/../ui-core/src/nav/WorkspaceStatus.tsx","webpack://_N_E/../ui-core/src/instance/InstanceTabs.tsx","webpack://_N_E/../ui-core/src/instance/useCanSeeConfig.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import 'codemirror/addon/search/searchcursor';\n\nimport {gql, useQuery} from '@apollo/client';\nimport {\n  Box,\n  Colors,\n  PageHeader,\n  Spinner,\n  Code,\n  Heading,\n  StyledReadOnlyCodeMirror,\n  Subheading,\n} from '@dagster-io/ui-components';\nimport * as codemirror from 'codemirror';\nimport * as React from 'react';\nimport {createGlobalStyle} from 'styled-components';\n\nimport {useQueryRefreshAtInterval, FIFTEEN_SECONDS} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {InstanceTabs} from './InstanceTabs';\nimport {InstanceConfigQuery, InstanceConfigQueryVariables} from './types/InstanceConfig.types';\n\nconst InstanceConfigStyle = createGlobalStyle`\n  .react-codemirror2 .CodeMirror.cm-s-instance-config {\n    box-shadow: 0 1px 0 ${Colors.KeylineGray};\n    height: 100%;\n  }\n\n  .react-codemirror2 .CodeMirror.cm-s-instance-config {\n    .config-highlight {\n      background-color: ${Colors.Yellow200};\n    }\n`;\n\nexport const InstanceConfig = React.memo(() => {\n  useTrackPageView();\n  useDocumentTitle('Configuration');\n\n  const {pageTitle} = React.useContext(InstancePageContext);\n  const queryResult = useQuery<InstanceConfigQuery, InstanceConfigQueryVariables>(\n    INSTANCE_CONFIG_QUERY,\n    {\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  const {data} = queryResult;\n  const config = data?.instance.info;\n\n  const onEditorDidMount = (editor: codemirror.Editor) => {\n    const documentHash = document.location.hash;\n    if (documentHash) {\n      const target = new RegExp(`^${documentHash.slice(1)}:`);\n      const cursor = editor.getSearchCursor(target);\n      const found = cursor.findNext();\n      if (found) {\n        editor.markText(cursor.from(), cursor.to(), {className: 'config-highlight'});\n        editor.scrollIntoView(cursor.from());\n      }\n    }\n  };\n\n  if (!data) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <InstanceConfigStyle />\n      <PageHeader\n        title={<Heading>{pageTitle}</Heading>}\n        tabs={<InstanceTabs tab=\"config\" refreshState={refreshState} />}\n      />\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n      >\n        <Subheading>\n          Dagster version: <Code style={{fontSize: '16px'}}>{data.version}</Code>\n        </Subheading>\n      </Box>\n      <StyledReadOnlyCodeMirror\n        editorDidMount={onEditorDidMount}\n        value={config || ''}\n        options={{lineNumbers: true, mode: 'yaml'}}\n        theme={['instance-config']}\n      />\n    </>\n  );\n});\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default InstanceConfig;\n\nexport const INSTANCE_CONFIG_QUERY = gql`\n  query InstanceConfigQuery {\n    version\n    instance {\n      id\n      info\n    }\n  }\n`;\n","import {Colors, Icon} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const InstanceWarningIcon = React.memo(() => {\n  const {daemons} = React.useContext(DeploymentStatusContext);\n\n  if (!daemons) {\n    return null;\n  }\n\n  return (\n    <WarningTooltip\n      content={daemons.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {Colors, Icon, Tooltip, Spinner} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {DeploymentStatusContext} from '../instance/DeploymentStatusProvider';\n\nimport {WarningTooltip} from './WarningTooltip';\n\nexport const WorkspaceStatus: React.FC<{placeholder: boolean}> = React.memo(({placeholder}) => {\n  const {codeLocations} = React.useContext(DeploymentStatusContext);\n\n  if (!codeLocations) {\n    return placeholder ? <div style={{width: '16px'}} /> : null;\n  }\n\n  if (codeLocations.type === 'spinner') {\n    return (\n      <Tooltip content={codeLocations.content} placement=\"bottom\">\n        <Spinner purpose=\"body-text\" fillColor={Colors.Gray300} />\n      </Tooltip>\n    );\n  }\n\n  return (\n    <WarningTooltip\n      content={codeLocations.content}\n      position=\"bottom\"\n      modifiers={{offset: {enabled: true, options: {offset: [0, 28]}}}}\n    >\n      <Icon name=\"warning\" color={Colors.Yellow500} />\n    </WarningTooltip>\n  );\n});\n","import {QueryResult} from '@apollo/client';\nimport {Box, Tabs} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {useFeatureFlags} from '../app/Flags';\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {InstanceWarningIcon} from '../nav/InstanceWarningIcon';\nimport {WorkspaceStatus} from '../nav/WorkspaceStatus';\nimport {TabLink} from '../ui/TabLink';\n\nimport {InstancePageContext} from './InstancePageContext';\nimport {useCanSeeConfig} from './useCanSeeConfig';\n\ninterface Props<TData> {\n  refreshState?: QueryRefreshState;\n  queryData?: QueryResult<TData, any>;\n  tab: string;\n}\n\nexport const InstanceTabs = <TData extends Record<string, any>>(props: Props<TData>) => {\n  const {refreshState, tab} = props;\n\n  const {healthTitle} = React.useContext(InstancePageContext);\n  const canSeeConfig = useCanSeeConfig();\n  const {flagInstanceConcurrencyLimits} = useFeatureFlags();\n\n  return (\n    <Box flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'flex-end'}}>\n      <Tabs selectedTabId={tab}>\n        <TabLink\n          id=\"locations\"\n          title=\"Code locations\"\n          to=\"/locations\"\n          icon={<WorkspaceStatus placeholder={false} />}\n        />\n        <TabLink id=\"health\" title={healthTitle} to=\"/health\" icon={<InstanceWarningIcon />} />\n        {canSeeConfig && flagInstanceConcurrencyLimits ? (\n          <TabLink id=\"concurrency\" title=\"Concurrency limits\" to=\"/concurrency\" />\n        ) : null}\n        {canSeeConfig ? <TabLink id=\"config\" title=\"Configuration\" to=\"/config\" /> : null}\n      </Tabs>\n      {refreshState ? (\n        <Box padding={{bottom: 8}}>\n          <QueryRefreshCountdown refreshState={refreshState} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\n\nimport {\n  InstanceConfigHasInfoQuery,\n  InstanceConfigHasInfoQueryVariables,\n} from './types/useCanSeeConfig.types';\n\nexport const useCanSeeConfig = () => {\n  const {data} = useQuery<InstanceConfigHasInfoQuery, InstanceConfigHasInfoQueryVariables>(\n    INSTANCE_CONFIG_HAS_INFO,\n  );\n  return !!data?.instance.hasInfo;\n};\n\nconst INSTANCE_CONFIG_HAS_INFO = gql`\n  query InstanceConfigHasInfo {\n    instance {\n      id\n      hasInfo\n    }\n  }\n`;\n"],"names":["PageHeader","props","title","tags","right","tabs","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsxs","PageHeaderContainer","background","Colors","Gray50","padding","top","left","border","side","width","color","KeylineGray","Box","flex","direction","justifyContent","bottom","alignItems","gap","wrap","styled","InstanceConfigStyle","createGlobalStyle","Yellow200","InstanceConfig","React","useTrackPageView","useDocumentTitle","pageTitle","InstancePageContext","queryResult","useQuery","INSTANCE_CONFIG_QUERY","notifyOnNetworkStatusChange","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","data","config","instance","info","Fragment","jsx","Heading","InstanceTabs","tab","vertical","horizontal","Subheading","Code","style","fontSize","version","StyledReadOnlyCodeMirror","editorDidMount","editor","documentHash","document","location","hash","target","RegExp","concat","slice","cursor","getSearchCursor","findNext","markText","from","to","className","scrollIntoView","value","options","lineNumbers","mode","theme","Spinner","purpose","__webpack_exports__","gql","InstanceWarningIcon","daemons","DeploymentStatusContext","jsx_runtime","WarningTooltip","content","position","modifiers","offset","enabled","Icon","name","Yellow500","WorkspaceStatus","param","placeholder","codeLocations","type","Tooltip","placement","fillColor","Gray300","div","healthTitle","canSeeConfig","useCanSeeConfig","flagInstanceConcurrencyLimits","useFeatureFlags","Tabs","selectedTabId","TabLink","id","icon","QueryRefreshCountdown","INSTANCE_CONFIG_HAS_INFO","hasInfo"],"sourceRoot":""}