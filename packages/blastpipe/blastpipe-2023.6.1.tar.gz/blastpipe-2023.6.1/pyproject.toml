# Copyright 2023 Ross J. Duff MSc 
# The copyright holder licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at

#   http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
[project]
authors = [{name = "Ross J. Duff MSc", email = "help@oziproject.dev"}]
dynamic = ["version"]
license = {file = "LICENSE.txt"}
readme  = "README.rst"

[project.optional_dependencies] # also OZI meson test suite names
# Default OZI test setup
dev  = ["[dist,docs,lint,test]"]
## Packaging Setup
dist = ["pyc_wheel", "python-semantic-release", "sigstore"]
## Documentation Setup
docs = ["doc8", "pydocstyle[toml]", "Pygments", "pyparsing", "sphinx",
        "sphinx-design", "sphinxawesome-codelinter", "sphinxawesome-theme"]
## Linting and Formatting Setup
lint = ["bandit[toml]", "black", "flake8", "flake8-quotes", "flake8-docstring-checker",
        "flake8-pytest-style", "flake8-type-checking", "flake8-annotations",
        "flake8-broken-line", "flake8-eradicate", "flake8-fixme", "flake8-bugbear",
        "flake8-datetimez", "flake8-no-pep420", "flake8-comprehensions",
        "flake8-leading-blank-lines", "flake8-tidy-imports", "flake8-pyi",
        "Flake8-pyproject", "isort", "mypy", "pylint", "pyright", "restructuredtext-lint"]
## Testing Setup
test = ["coverage[toml]", "hypothesis[all]", "pytest", "pytest-asyncio", "pytest-cov", 
        "pytest-tcpclient", "pytest-randomly", "pytest-xdist"]

[tool.mesonpep517.metadata]
# We let setuptools_scm write version metadata to a PKG-INFO template
summary         = "Packaged with OZI."
pkg-info-file   = "PKG-INFO"

[build-system]
requires      = ["mesonpep517","ninja","setuptools>=64","setuptools_scm[toml]>=6.2","tomli"]
build-backend = "mesonpep517.buildapi"

[tool.bandit]
# We allow bandit to also scan meson build directory but not virtual environments
exclude_dirs = ["venv", "build-env-*"]

[tool.black]
extend-exclude = "\\.pyi"
line-length = 93

[tool.coverage.report]
exclude_lines = [
    "#\\s*(pragma|PRAGMA)[:\\s]?\\s*(no|NO)\\s*(cover|COVER)",
    "#\\s*(pragma|PRAGMA)[:\\s]?\\s*(defer|DEFER)\\s*(to|TO)\\s*[a-zA-Z0-9_]*",
    "def __repr__",
    "def __wrapper", # functools.wraps decorated functions
    "(\\.\\.\\.)",
    "@(abc\\.)?abstractmethod",
    "class .*\\bProtocol\\):",
    "if __name__ == .__main__.:",
    ]
fail_under    = 100.0
show_missing  = true
skip_covered  = true
skip_empty    = true

[tool.coverage.run]
branch         = true
relative_files = true

[tool.doc8]
ignore = ["D000", "D002"]

[tool.flake8]
max-line-length = 93
extend-exclude = ["build-env-*", "venv", "build*", "*.pyi"]
extend-ignore = "E501"
extend-select = "B950"

[tool.isort]
line_length = 93
profile = "black"
verbose = true

[tool.mypy]
implicit_reexport = true
strict = true

[tool.pydocstyle]
match = "\\*\\.py"

[tool.pylint.MASTER]
disable = "C0301"
expected-line-ending-format = "LF"
max-line-length = 93
max-nested-blocks = 4

[tool.pytest.ini_options]  #[tool.pytest] # This will be used by pytest in the future
filterwarnings      = [
"error",
"ignore:The --rsyncdir command line argument and rsyncdirs config variable are deprecated.:DeprecationWarning",
]
asyncio_mode        = "auto"
log_cli             = true
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_cli_format      = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s (%(filename)s:%(lineno)s)"
log_cli_level       = "INFO"

[tool.semantic_release]
commit_parser                  = "emoji"
major_on_zero                  = false
tag_format                     = "{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "beta"
prerelease = false

[tool.semantic_release.changelog]
changelog_file                 = "CHANGELOG.md"

[tool.semantic_release.remote]
token = { env = "GH_TOKEN" }

[tool.semantic_release.publish]
dist_glob_patterns             = ["*.whl","*.tar.gz", "sig/*"]
upload_to_vcs_release          = true

[tool.setuptools_scm]
write_to_template = """
Metadata-Version: 2.1
Name: blastpipe
Version: {version}
Summary: Packaged with OZI.
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Natural Language :: English
Classifier: Intended Audience :: Developers
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Project-URL: Homepage, https://oziproject.dev/
Project-URL: Download, https://github.com/rjdbcm/blastpipe/archive/refs/heads/main.zip
Description-Content-Type: text/x-rst

.. Copyright 2023 Ross J. Duff MSc 
   The copyright holder licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.

=========
blastpipe
=========

|py-version-badge| |openssf-badge| |slsa-level3-badge| |fossa-badge| |semantic-release-badge| |bandit-badge|

A simple utility library used as an integration and performance test for using
Meson+OZI as Python 3 packaging management layer.

.. image:: https://raw.githubusercontent.com/sigstore/community/main/artwork/badge/sigstore_codesigned_purple.png
 :align: right
 :height: 140
 :target: https://www.sigstore.dev/

Contributing
^^^^^^^^^^^^

Contributions are what make the open source community such an amazing place to
learn, inspire, and create. Any contributions you make are **greatly appreciated**.

If you have a suggestion that would make this better, please fork the repo and
create a pull request. You can also simply open an issue with the tag "enhancement".
Don't forget to give the project a star! Thanks again!

1. Fork the repository
2. Create your Feature Branch (``git checkout -b feature/AmazingFeature``)
3. Commit your Changes (``git commit -m 'Add some AmazingFeature'``)
4. Push to the Branch (``git push origin feature/AmazingFeature``)
5. Open a Pull Request

Bug Reports
^^^^^^^^^^^

1. Create an issue with the tag "bug" with a descriptive title stating the issue succinctly.
2. Fill out the issue template with the information requested.

If you have any proposed changes related to a bug, if an Issue has not been created please
complete the above instructions.
The next steps are similar to the steps needed to create a feature pull request.

Submitting a Fix
################

1. Fork the repository
2. Create your Bugfix Branch (``git checkout -b bugfix/Issue#``)
3. Commit your Changes (``git commit -m 'üêõ: Fix Issue#'``)
4. Push to the Branch (``git push origin bugfix/Issue#``)
5. Open a Pull Request

License
^^^^^^^

blastpipe is released under the terms of the 2.0 version of the Apache License,
approved by the Apache Software Foundation. blastpipe meets the Open Source Initiative's definition of
open source software, and the Free Software Foundation's definition of GPLv3-compatible open 
source software.

|osi-logo| |asf-logo| |fsf-logo|

.. note::
   The OSI logo trademark is the trademark of Open Source Initiative.
   The blastpipe project is not affiliated with or endorsed by the Open Source Initiative.

.. note::
   The Apache logo trademark is the trademark of the Apache Software Foundation.
   The blastpipe project is not affiliated with or endorsed by the Apache Software Foundation.

.. note::
   The FSF logo trademark is the trademark of the Free Software Foundation.
   The blastpipe project is not affiliated with or endorsed by the Free Software Foundation.

.. |osi-logo| image:: https://149753425.v2.pressablecdn.com/wp-content/uploads/2009/06/OSIApproved_100X125.png
 :height: 100
 :alt: OSI Approved Open Source License under Keyhole Logo
 :target: https://opensource.org/

.. |asf-logo| image:: https://www.apache.org/foundation/press/kit/asf_logo_url.png
 :height: 100
 :alt: Apache-2.0 License
 :target: https://www.apache.org/

.. |fsf-logo| image:: https://www.gnu.org/graphics/logo-fsf.org.png
 :width: 330
 :alt: GPL-compatible Open Source License
 :target: https://www.gnu.org/



.. |py-version-badge| image:: https://img.shields.io/pypi/pyversions/ozi
    :alt: PyPI - Python Version
.. |slsa-level3-badge| image:: https://slsa.dev/images/gh-badge-level3.svg
.. |fossa-badge| image:: https://app.fossa.com/api/projects/git%2Bgithub.com%2Frjdbcm%2Fblastpipe.svg?type=shield
    :target: https://app.fossa.com/projects/git%2Bgithub.com%2Frjdbcm%2Fblastpipe?ref=badge_large
    :alt: License Compliance
.. |openssf-badge| image:: https://bestpractices.coreinfrastructure.org/projects/7515/badge
    :target: https://bestpractices.coreinfrastructure.org/projects/7515
    :alt: Open Source Security Foundation self-certification status
.. |semantic-release-badge| image:: https://img.shields.io/badge/semantic--release-gitmoji-e10079?logo=semantic-release
    :target: https://github.com/python-semantic-release/python-semantic-release
    :alt: Automatic Semantic Versioning for Python projects
.. |bandit-badge| image:: https://img.shields.io/badge/security-%E2%9C%94%20bandit-yellow.svg
    :target: https://github.com/PyCQA/bandit
    :alt: Security Status
"""
write_to = "PKG-INFO"
# meson writes during configuration so that meson dist can have a valid version.
fallback_version = "@MESON_DIST_FALLBACK_VERSION@"
# meson writes during configuration so that github tarballs can have a valid version.
parentdir_prefix_version = "@PROJECT_NAME@-"
tag_regex = "^(?P<prefix>v)?(?P<version>[^\\+]+)(?P<suffix>.*)?$"

[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist = True
envlist = py{39,310-type,311}-toml

[gh]
python =
     3.11 = py311-toml
     3.10 = py310-toml-type
     3.9 = py39-toml

[testenv]
package = wheel
deps =
     ninja >= 1.8.2
     meson >= 1.1.0
     setuptools_scm[toml]>=6.2
     toml: tomli >= 2.0.0
commands =
     meson setup build-{envname} -Ddev=enabled --reconfigure
     meson test --maxfail=1 -C build-{envname} {posargs}
"""