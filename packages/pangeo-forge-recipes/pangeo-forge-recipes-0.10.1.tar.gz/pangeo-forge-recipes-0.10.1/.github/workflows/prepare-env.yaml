name: Prepare env

on:
  workflow_call:

# ** What is this this workflow? **
#
#   This resuable environment building and caching ("prepare-env") workflow adds some complexity
#   to our CI stack, in exchange for optimizing for speed. Other workflows which rely on it can
#   load cached environments without needing to build them from scratch.
#
# ** How do I use it? **
#
#   To load a cached environment built by this workflow in another workflow, please refer to
#   main.yaml in this directory, which demonstrates its proper use.
#
# ** Details **
#
#    This step builds and caches the test environments using conda.
#    If there is no cache, building each environment takes 3-4 minutes.
#    If there is a cache this step should take about 40 seconds.
#    (The time needed to install conda and check the cache.)
#
#    The cache key is as follows:
#    ${{ runner.os }}-conda-${{ matrix.python-version }}-${{ hashFiles( env.env_file ) }}-${{ env.CACHE_NUMBER }}
#
#    A key parameter env.CACHE_NUMBER. This is a number that is set based on the current date:
#    CACHE_NUMBER=`expr $(date +'%j') / 3`
#    This is designed such that the cached environment will be reused for maximum 3 days.
#    After 3 days, the CACHE_NUMBER will increment, forcing a new environment to be built.
#    This cadence was chosen as a balance between making the tests go fast
#    (avoiding rebuilding environments every run), and using a fresh, recent environment.
#
#    The test environment is cached in /usr/share/miniconda3/envs/pangeo-forge-recipes

jobs:
  prepare-env:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        dependencies: ["releases-only", "upstream-dev"]
    steps:
      - uses: actions/checkout@v3
      - name: 🔁 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: 🔁 Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: pangeo-forge-recipes
          use-mamba: true
      - name: 🎯 Set cache number
        id: cache-number
        # cache will last 3 days by default
        run: echo CACHE_NUMBER=`expr $(date +'%j') / 3` >> $GITHUB_ENV
      - name: 🎯 Set environment file
        id: env-file
        run: echo "env_file=ci/py${{ matrix.python-version }}.yml" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: 🗃 Cache environment
        with:
          path: /usr/share/miniconda3/envs/pangeo-forge-recipes
          key: ${{ runner.os }}-conda-${{ matrix.python-version }}-${{ hashFiles( env.env_file ) }}-${{ matrix.dependencies }}-${{ env.CACHE_NUMBER }}
        id: conda-cache
      - name: 🐫 Maybe Update environment
        if: steps.conda-cache.outputs.cache-hit != 'true'
        run: mamba env update -n pangeo-forge-recipes -f ${{ env.env_file }}
      - name: 🧑‍💻 Maybe update to upstream dev versions
        if: matrix.dependencies == 'upstream-dev'
        run: mamba env update -n pangeo-forge-recipes -f ci/upstream-dev.yml
      - name: 🐍 List conda env
        shell: bash -l {0}
        run: |
          conda info
          conda list
