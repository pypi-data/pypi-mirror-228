# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from airavata_mft_sdk.box import BoxCredential_pb2 as box_dot_BoxCredential__pb2


class BoxSecretServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getBoxSecret = channel.unary_unary(
                '/org.apache.airavata.mft.credential.service.box.BoxSecretService/getBoxSecret',
                request_serializer=box_dot_BoxCredential__pb2.BoxSecretGetRequest.SerializeToString,
                response_deserializer=box_dot_BoxCredential__pb2.BoxSecret.FromString,
                )
        self.createBoxSecret = channel.unary_unary(
                '/org.apache.airavata.mft.credential.service.box.BoxSecretService/createBoxSecret',
                request_serializer=box_dot_BoxCredential__pb2.BoxSecretCreateRequest.SerializeToString,
                response_deserializer=box_dot_BoxCredential__pb2.BoxSecret.FromString,
                )
        self.updateBoxSecret = channel.unary_unary(
                '/org.apache.airavata.mft.credential.service.box.BoxSecretService/updateBoxSecret',
                request_serializer=box_dot_BoxCredential__pb2.BoxSecretUpdateRequest.SerializeToString,
                response_deserializer=box_dot_BoxCredential__pb2.BoxSecretUpdateResponse.FromString,
                )
        self.deleteBoxSecret = channel.unary_unary(
                '/org.apache.airavata.mft.credential.service.box.BoxSecretService/deleteBoxSecret',
                request_serializer=box_dot_BoxCredential__pb2.BoxSecretDeleteRequest.SerializeToString,
                response_deserializer=box_dot_BoxCredential__pb2.BoxSecretDeleteResponse.FromString,
                )


class BoxSecretServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getBoxSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createBoxSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateBoxSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteBoxSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BoxSecretServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getBoxSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.getBoxSecret,
                    request_deserializer=box_dot_BoxCredential__pb2.BoxSecretGetRequest.FromString,
                    response_serializer=box_dot_BoxCredential__pb2.BoxSecret.SerializeToString,
            ),
            'createBoxSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.createBoxSecret,
                    request_deserializer=box_dot_BoxCredential__pb2.BoxSecretCreateRequest.FromString,
                    response_serializer=box_dot_BoxCredential__pb2.BoxSecret.SerializeToString,
            ),
            'updateBoxSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.updateBoxSecret,
                    request_deserializer=box_dot_BoxCredential__pb2.BoxSecretUpdateRequest.FromString,
                    response_serializer=box_dot_BoxCredential__pb2.BoxSecretUpdateResponse.SerializeToString,
            ),
            'deleteBoxSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteBoxSecret,
                    request_deserializer=box_dot_BoxCredential__pb2.BoxSecretDeleteRequest.FromString,
                    response_serializer=box_dot_BoxCredential__pb2.BoxSecretDeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'org.apache.airavata.mft.credential.service.box.BoxSecretService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BoxSecretService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getBoxSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.mft.credential.service.box.BoxSecretService/getBoxSecret',
            box_dot_BoxCredential__pb2.BoxSecretGetRequest.SerializeToString,
            box_dot_BoxCredential__pb2.BoxSecret.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createBoxSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.mft.credential.service.box.BoxSecretService/createBoxSecret',
            box_dot_BoxCredential__pb2.BoxSecretCreateRequest.SerializeToString,
            box_dot_BoxCredential__pb2.BoxSecret.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateBoxSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.mft.credential.service.box.BoxSecretService/updateBoxSecret',
            box_dot_BoxCredential__pb2.BoxSecretUpdateRequest.SerializeToString,
            box_dot_BoxCredential__pb2.BoxSecretUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteBoxSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.mft.credential.service.box.BoxSecretService/deleteBoxSecret',
            box_dot_BoxCredential__pb2.BoxSecretDeleteRequest.SerializeToString,
            box_dot_BoxCredential__pb2.BoxSecretDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
