# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from airavata_mft_sdk.airavata_mft_sdk.airavata_mft_sdk.resourcesecretmap import StorageSecretMap_pb2 as resourcesecretmap_dot_StorageSecretMap__pb2


class StorageSecretServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getStorageSecret = channel.unary_unary(
                '/org.apache.airavata.mft.storage.stubs.storagesecret.StorageSecretService/getStorageSecret',
                request_serializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretGetRequest.SerializeToString,
                response_deserializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecret.FromString,
                )
        self.searchStorageSecret = channel.unary_unary(
                '/org.apache.airavata.mft.storage.stubs.storagesecret.StorageSecretService/searchStorageSecret',
                request_serializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretSearchRequest.SerializeToString,
                response_deserializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretSearchResponse.FromString,
                )
        self.createStorageSecret = channel.unary_unary(
                '/org.apache.airavata.mft.storage.stubs.storagesecret.StorageSecretService/createStorageSecret',
                request_serializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretCreateRequest.SerializeToString,
                response_deserializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecret.FromString,
                )
        self.updateStorageSecret = channel.unary_unary(
                '/org.apache.airavata.mft.storage.stubs.storagesecret.StorageSecretService/updateStorageSecret',
                request_serializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretUpdateRequest.SerializeToString,
                response_deserializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretUpdateResponse.FromString,
                )
        self.deleteStorageSecret = channel.unary_unary(
                '/org.apache.airavata.mft.storage.stubs.storagesecret.StorageSecretService/deleteStorageSecret',
                request_serializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretDeleteRequest.SerializeToString,
                response_deserializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretDeleteResponse.FromString,
                )


class StorageSecretServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getStorageSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def searchStorageSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createStorageSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateStorageSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteStorageSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StorageSecretServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getStorageSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.getStorageSecret,
                    request_deserializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretGetRequest.FromString,
                    response_serializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecret.SerializeToString,
            ),
            'searchStorageSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.searchStorageSecret,
                    request_deserializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretSearchRequest.FromString,
                    response_serializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretSearchResponse.SerializeToString,
            ),
            'createStorageSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.createStorageSecret,
                    request_deserializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretCreateRequest.FromString,
                    response_serializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecret.SerializeToString,
            ),
            'updateStorageSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.updateStorageSecret,
                    request_deserializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretUpdateRequest.FromString,
                    response_serializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretUpdateResponse.SerializeToString,
            ),
            'deleteStorageSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteStorageSecret,
                    request_deserializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretDeleteRequest.FromString,
                    response_serializer=resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretDeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'org.apache.airavata.mft.storage.stubs.storagesecret.StorageSecretService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StorageSecretService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getStorageSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.mft.storage.stubs.storagesecret.StorageSecretService/getStorageSecret',
            resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretGetRequest.SerializeToString,
            resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecret.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def searchStorageSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.mft.storage.stubs.storagesecret.StorageSecretService/searchStorageSecret',
            resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretSearchRequest.SerializeToString,
            resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretSearchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createStorageSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.mft.storage.stubs.storagesecret.StorageSecretService/createStorageSecret',
            resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretCreateRequest.SerializeToString,
            resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecret.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateStorageSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.mft.storage.stubs.storagesecret.StorageSecretService/updateStorageSecret',
            resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretUpdateRequest.SerializeToString,
            resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteStorageSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.mft.storage.stubs.storagesecret.StorageSecretService/deleteStorageSecret',
            resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretDeleteRequest.SerializeToString,
            resourcesecretmap_dot_StorageSecretMap__pb2.StorageSecretDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
