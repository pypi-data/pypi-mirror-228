# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: scp/SCPStorageService.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from airavata_mft_sdk.scp import SCPStorage_pb2 as scp_dot_SCPStorage__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1bscp/SCPStorageService.proto\x12,org.apache.airavata.mft.resource.service.scp\x1a\x14scp/SCPStorage.proto2\xdb\x06\n\x11SCPStorageService\x12\xa7\x01\n\x0elistSCPStorage\x12I.org.apache.airavata.mft.resource.stubs.scp.storage.SCPStorageListRequest\x1aJ.org.apache.airavata.mft.resource.stubs.scp.storage.SCPStorageListResponse\x12\x99\x01\n\rgetSCPStorage\x12H.org.apache.airavata.mft.resource.stubs.scp.storage.SCPStorageGetRequest\x1a>.org.apache.airavata.mft.resource.stubs.scp.storage.SCPStorage\x12\x9f\x01\n\x10\x63reateSCPStorage\x12K.org.apache.airavata.mft.resource.stubs.scp.storage.SCPStorageCreateRequest\x1a>.org.apache.airavata.mft.resource.stubs.scp.storage.SCPStorage\x12\xad\x01\n\x10updateSCPStorage\x12K.org.apache.airavata.mft.resource.stubs.scp.storage.SCPStorageUpdateRequest\x1aL.org.apache.airavata.mft.resource.stubs.scp.storage.SCPStorageUpdateResponse\x12\xad\x01\n\x10\x64\x65leteSCPStorage\x12K.org.apache.airavata.mft.resource.stubs.scp.storage.SCPStorageDeleteRequest\x1aL.org.apache.airavata.mft.resource.stubs.scp.storage.SCPStorageDeleteResponseB\x02P\x01\x62\x06proto3')



_SCPSTORAGESERVICE = DESCRIPTOR.services_by_name['SCPStorageService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'P\001'
  _SCPSTORAGESERVICE._serialized_start=100
  _SCPSTORAGESERVICE._serialized_end=959
# @@protoc_insertion_point(module_scope)
