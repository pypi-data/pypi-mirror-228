# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from airavata_mft_sdk.odata import ODataCredential_pb2 as odata_dot_ODataCredential__pb2


class ODataSecretServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getODataSecret = channel.unary_unary(
                '/org.apache.airavata.mft.credential.service.odata.ODataSecretService/getODataSecret',
                request_serializer=odata_dot_ODataCredential__pb2.ODataSecretGetRequest.SerializeToString,
                response_deserializer=odata_dot_ODataCredential__pb2.ODataSecret.FromString,
                )
        self.createODataSecret = channel.unary_unary(
                '/org.apache.airavata.mft.credential.service.odata.ODataSecretService/createODataSecret',
                request_serializer=odata_dot_ODataCredential__pb2.ODataSecretCreateRequest.SerializeToString,
                response_deserializer=odata_dot_ODataCredential__pb2.ODataSecret.FromString,
                )
        self.updateODataSecret = channel.unary_unary(
                '/org.apache.airavata.mft.credential.service.odata.ODataSecretService/updateODataSecret',
                request_serializer=odata_dot_ODataCredential__pb2.ODataSecretUpdateRequest.SerializeToString,
                response_deserializer=odata_dot_ODataCredential__pb2.ODataSecretUpdateResponse.FromString,
                )
        self.deleteODataSecret = channel.unary_unary(
                '/org.apache.airavata.mft.credential.service.odata.ODataSecretService/deleteODataSecret',
                request_serializer=odata_dot_ODataCredential__pb2.ODataSecretDeleteRequest.SerializeToString,
                response_deserializer=odata_dot_ODataCredential__pb2.ODataSecretDeleteResponse.FromString,
                )


class ODataSecretServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getODataSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createODataSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateODataSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteODataSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ODataSecretServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getODataSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.getODataSecret,
                    request_deserializer=odata_dot_ODataCredential__pb2.ODataSecretGetRequest.FromString,
                    response_serializer=odata_dot_ODataCredential__pb2.ODataSecret.SerializeToString,
            ),
            'createODataSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.createODataSecret,
                    request_deserializer=odata_dot_ODataCredential__pb2.ODataSecretCreateRequest.FromString,
                    response_serializer=odata_dot_ODataCredential__pb2.ODataSecret.SerializeToString,
            ),
            'updateODataSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.updateODataSecret,
                    request_deserializer=odata_dot_ODataCredential__pb2.ODataSecretUpdateRequest.FromString,
                    response_serializer=odata_dot_ODataCredential__pb2.ODataSecretUpdateResponse.SerializeToString,
            ),
            'deleteODataSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteODataSecret,
                    request_deserializer=odata_dot_ODataCredential__pb2.ODataSecretDeleteRequest.FromString,
                    response_serializer=odata_dot_ODataCredential__pb2.ODataSecretDeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'org.apache.airavata.mft.credential.service.odata.ODataSecretService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ODataSecretService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getODataSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.mft.credential.service.odata.ODataSecretService/getODataSecret',
            odata_dot_ODataCredential__pb2.ODataSecretGetRequest.SerializeToString,
            odata_dot_ODataCredential__pb2.ODataSecret.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createODataSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.mft.credential.service.odata.ODataSecretService/createODataSecret',
            odata_dot_ODataCredential__pb2.ODataSecretCreateRequest.SerializeToString,
            odata_dot_ODataCredential__pb2.ODataSecret.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateODataSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.mft.credential.service.odata.ODataSecretService/updateODataSecret',
            odata_dot_ODataCredential__pb2.ODataSecretUpdateRequest.SerializeToString,
            odata_dot_ODataCredential__pb2.ODataSecretUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteODataSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.apache.airavata.mft.credential.service.odata.ODataSecretService/deleteODataSecret',
            odata_dot_ODataCredential__pb2.ODataSecretDeleteRequest.SerializeToString,
            odata_dot_ODataCredential__pb2.ODataSecretDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
