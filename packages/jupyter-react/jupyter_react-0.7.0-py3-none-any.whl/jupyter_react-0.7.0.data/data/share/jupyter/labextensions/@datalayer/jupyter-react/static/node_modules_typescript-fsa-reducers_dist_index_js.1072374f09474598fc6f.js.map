{"version":3,"file":"node_modules_typescript-fsa-reducers_dist_index_js.1072374f09474598fc6f.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AA8FA,SAAgB,uBAAuB,CAAI,YAAe;IACtD,OAAO,WAAW,CAAO,YAAY,CAAC,CAAC;AAC3C,CAAC;AAFD,0DAEC;AAED,SAAgB,0BAA0B;IACtC,OAAO,WAAW,EAAQ,CAAC;AAC/B,CAAC;AAFD,gEAEC;AAED,SAAgB,gBAAgB;IAI5B,OAAO,WAAW,EAAa,CAAC;AACpC,CAAC;AALD,4CAKC;AAED,SAAS,WAAW,CAChB,YAAkB;IAElB,IAAM,oBAAoB,GAEtB,EAAE,CAAC;IACP,IAAM,OAAO,GAAG,kBAAkB,CAC9B,YAAY,EACZ,oBAAoB,CACM,CAAC;IAE/B,OAAO,CAAC,cAAc,GAAG,UACrB,aAA+B,EAC/B,OAAsC;QAEtC,oBAAoB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QACnD,OAAO,OAAO,CAAC;IACnB,CAAC,CAAC;IAEF,OAAO,CAAC,IAAI,GAAG,UACX,aAA+B,EAC/B,OAA8B;QAE9B,cAAO,CAAC,cAAc,CAAC,aAAa,EAAE,UAAC,KAAK,EAAE,MAAM;YAChD,cAAO,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC;QAA9B,CAA8B,CACjC;IAFD,CAEC,CAAC;IAEN,OAAO,CAAC,eAAe,GAAG,UACtB,cAAuC,EACvC,OAAsC;QAEtC,KAA4B,UAAc,EAAd,iCAAc,EAAd,4BAAc,EAAd,IAAc,EAAE;YAAvC,IAAM,aAAa;YACpB,OAAO,CAAC,cAAc,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;SAClD;QACD,OAAO,OAAO,CAAC;IACnB,CAAC,CAAC;IAEF,OAAO,CAAC,KAAK,GAAG,UACZ,cAAuC,EACvC,OAA8B;QAE9B,cAAO,CAAC,eAAe,CAAC,cAAc,EAAE,UAAC,KAAK,EAAE,MAAM;YAClD,cAAO,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC;QAA9B,CAA8B,CACjC;IAFD,CAEC,CAAC;IAEN,OAAO,CAAC,YAAY,GAAG,UACnB,aAE8B,IAC7B,oBAAa,CAAC,OAAO,CAAC,EAAtB,CAAsB,CAAC;IAE5B,OAAO,CAAC,OAAO,GAAG,UAAC,cAA6C;QAC5D,yBAAkB,CACd,YAAY,eACP,oBAAoB,GACzB,cAAc,CACjB;IAJD,CAIC,CAAC;IAEN,OAAO,CAAC,KAAK,GAAG;QACZ,yBAAkB,CAAC,YAAY,eAAO,oBAAoB,EAAG;IAA7D,CAA6D,CAAC;IAElE,OAAO,OAAO,CAAC;AACnB,CAAC;AAED,SAAS,kBAAkB,CACvB,YAA6B,EAC7B,oBAAuE,EACvE,cAA8C;IAE9C,OAAO,UAAC,KAA2B,EAAE,MAAiB;QAA9C,gCAAQ,YAAmB;QAC/B,IAAM,OAAO,GAAG,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,cAAc,CAAC;QACpE,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACpD,CAAC,CAAC;AACN,CAAC","sources":["webpack://@datalayer/jupyter-react/../../../../../node_modules/typescript-fsa-reducers/src/index.ts"],"sourcesContent":["import { Action, ActionCreator, AnyAction } from \"typescript-fsa\";\n\nexport interface ReducerBuilder<InS extends OutS, OutS = InS> {\n    case<P>(\n        actionCreator: ActionCreator<P>,\n        handler: Handler<InS, OutS, P>,\n    ): ReducerBuilder<InS, OutS>;\n    caseWithAction<P>(\n        actionCreator: ActionCreator<P>,\n        handler: Handler<InS, OutS, Action<P>>,\n    ): ReducerBuilder<InS, OutS>;\n\n    // cases variadic overloads\n    cases<P1>(\n        actionCreators: [ActionCreator<P1>],\n        handler: Handler<InS, OutS, P1>,\n    ): ReducerBuilder<InS, OutS>;\n    cases<P1, P2>(\n        actionCreators: [ActionCreator<P1>, ActionCreator<P2>],\n        handler: Handler<InS, OutS, P1 | P2>,\n    ): ReducerBuilder<InS, OutS>;\n    cases<P1, P2, P3>(\n        actionCreators: [\n            ActionCreator<P1>,\n            ActionCreator<P2>,\n            ActionCreator<P3>\n        ],\n        handler: Handler<InS, OutS, P1 | P2 | P3>,\n    ): ReducerBuilder<InS, OutS>;\n    cases<P1, P2, P3, P4>(\n        actionCreators: [\n            ActionCreator<P1>,\n            ActionCreator<P2>,\n            ActionCreator<P3>,\n            ActionCreator<P4>\n        ],\n        handler: Handler<InS, OutS, P1 | P2 | P3 | P4>,\n    ): ReducerBuilder<InS, OutS>;\n    cases<P>(\n        actionCreators: Array<ActionCreator<P>>,\n        handler: Handler<InS, OutS, P>,\n    ): ReducerBuilder<InS, OutS>;\n\n    // casesWithAction variadic overloads\n    casesWithAction<P1>(\n        actionCreators: [ActionCreator<P1>],\n        handler: Handler<InS, OutS, Action<P1>>,\n    ): ReducerBuilder<InS, OutS>;\n    casesWithAction<P1, P2>(\n        actionCreators: [ActionCreator<P1>, ActionCreator<P2>],\n        handler: Handler<InS, OutS, Action<P1 | P2>>,\n    ): ReducerBuilder<InS, OutS>;\n    casesWithAction<P1, P2, P3>(\n        actionCreators: [\n            ActionCreator<P1>,\n            ActionCreator<P2>,\n            ActionCreator<P3>\n        ],\n        handler: Handler<InS, OutS, Action<P1 | P2 | P3>>,\n    ): ReducerBuilder<InS, OutS>;\n    casesWithAction<P1, P2, P3, P4>(\n        actionCreators: [\n            ActionCreator<P1>,\n            ActionCreator<P2>,\n            ActionCreator<P3>,\n            ActionCreator<P4>\n        ],\n        handler: Handler<InS, OutS, Action<P1 | P2 | P3 | P4>>,\n    ): ReducerBuilder<InS, OutS>;\n    casesWithAction<P>(\n        actionCreators: Array<ActionCreator<P>>,\n        handler: Handler<InS, OutS, Action<P>>,\n    ): ReducerBuilder<InS, OutS>;\n\n    withHandling(\n        updateBuilder: (\n            builder: ReducerBuilder<InS, OutS>,\n        ) => ReducerBuilder<InS, OutS>,\n    ): ReducerBuilder<InS, OutS>;\n\n    // Intentionally avoid AnyAction in return type so packages can export reducers\n    // created using .default() or .build() without requiring a dependency on typescript-fsa.\n    default(\n        defaultHandler: Handler<InS, OutS, AnyAction>,\n    ): (state: InS | undefined, action: { type: any }) => OutS;\n    build(): (state: InS | undefined, action: { type: any }) => OutS;\n    (state: InS | undefined, action: AnyAction): OutS;\n}\n\nexport type Handler<InS extends OutS, OutS, P> = (\n    state: InS,\n    payload: P,\n) => OutS;\n\nexport function reducerWithInitialState<S>(initialState: S): ReducerBuilder<S> {\n    return makeReducer<S, S>(initialState);\n}\n\nexport function reducerWithoutInitialState<S>(): ReducerBuilder<S> {\n    return makeReducer<S, S>();\n}\n\nexport function upcastingReducer<InS extends OutS, OutS>(): ReducerBuilder<\n    InS,\n    OutS\n> {\n    return makeReducer<InS, OutS>();\n}\n\nfunction makeReducer<InS extends OutS, OutS>(\n    initialState?: InS,\n): ReducerBuilder<InS, OutS> {\n    const handlersByActionType: {\n        [actionType: string]: Handler<InS, OutS, any>;\n    } = {};\n    const reducer = getReducerFunction(\n        initialState,\n        handlersByActionType,\n    ) as ReducerBuilder<InS, OutS>;\n\n    reducer.caseWithAction = <P>(\n        actionCreator: ActionCreator<P>,\n        handler: Handler<InS, OutS, Action<P>>,\n    ) => {\n        handlersByActionType[actionCreator.type] = handler;\n        return reducer;\n    };\n\n    reducer.case = <P>(\n        actionCreator: ActionCreator<P>,\n        handler: Handler<InS, OutS, P>,\n    ) =>\n        reducer.caseWithAction(actionCreator, (state, action) =>\n            handler(state, action.payload),\n        );\n\n    reducer.casesWithAction = <P>(\n        actionCreators: Array<ActionCreator<P>>,\n        handler: Handler<InS, OutS, Action<P>>,\n    ) => {\n        for (const actionCreator of actionCreators) {\n            reducer.caseWithAction(actionCreator, handler);\n        }\n        return reducer;\n    };\n\n    reducer.cases = <P>(\n        actionCreators: Array<ActionCreator<P>>,\n        handler: Handler<InS, OutS, P>,\n    ) =>\n        reducer.casesWithAction(actionCreators, (state, action) =>\n            handler(state, action.payload),\n        );\n\n    reducer.withHandling = (\n        updateBuilder: (\n            builder: ReducerBuilder<InS, OutS>,\n        ) => ReducerBuilder<InS, OutS>,\n    ) => updateBuilder(reducer);\n\n    reducer.default = (defaultHandler: Handler<InS, OutS, AnyAction>) =>\n        getReducerFunction(\n            initialState,\n            { ...handlersByActionType },\n            defaultHandler,\n        );\n\n    reducer.build = () =>\n        getReducerFunction(initialState, { ...handlersByActionType });\n\n    return reducer;\n}\n\nfunction getReducerFunction<InS extends OutS, OutS>(\n    initialState: InS | undefined,\n    handlersByActionType: { [actionType: string]: Handler<InS, OutS, any> },\n    defaultHandler?: Handler<InS, OutS, AnyAction>,\n) {\n    return (state = initialState as InS, action: AnyAction) => {\n        const handler = handlersByActionType[action.type] || defaultHandler;\n        return handler ? handler(state, action) : state;\n    };\n}\n"],"names":[],"sourceRoot":""}