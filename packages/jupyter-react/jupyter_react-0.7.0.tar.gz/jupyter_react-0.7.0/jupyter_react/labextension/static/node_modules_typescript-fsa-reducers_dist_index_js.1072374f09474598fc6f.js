"use strict";
(self["webpackChunk_datalayer_jupyter_react"] = self["webpackChunk_datalayer_jupyter_react"] || []).push([["node_modules_typescript-fsa-reducers_dist_index_js"],{

/***/ "../../../../../node_modules/typescript-fsa-reducers/dist/index.js":
/*!*************************************************************************!*\
  !*** ../../../../../node_modules/typescript-fsa-reducers/dist/index.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports) {


var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
function reducerWithInitialState(initialState) {
    return makeReducer(initialState);
}
exports.reducerWithInitialState = reducerWithInitialState;
function reducerWithoutInitialState() {
    return makeReducer();
}
exports.reducerWithoutInitialState = reducerWithoutInitialState;
function upcastingReducer() {
    return makeReducer();
}
exports.upcastingReducer = upcastingReducer;
function makeReducer(initialState) {
    var handlersByActionType = {};
    var reducer = getReducerFunction(initialState, handlersByActionType);
    reducer.caseWithAction = function (actionCreator, handler) {
        handlersByActionType[actionCreator.type] = handler;
        return reducer;
    };
    reducer.case = function (actionCreator, handler) {
        return reducer.caseWithAction(actionCreator, function (state, action) {
            return handler(state, action.payload);
        });
    };
    reducer.casesWithAction = function (actionCreators, handler) {
        for (var _i = 0, actionCreators_1 = actionCreators; _i < actionCreators_1.length; _i++) {
            var actionCreator = actionCreators_1[_i];
            reducer.caseWithAction(actionCreator, handler);
        }
        return reducer;
    };
    reducer.cases = function (actionCreators, handler) {
        return reducer.casesWithAction(actionCreators, function (state, action) {
            return handler(state, action.payload);
        });
    };
    reducer.withHandling = function (updateBuilder) { return updateBuilder(reducer); };
    reducer.default = function (defaultHandler) {
        return getReducerFunction(initialState, __assign({}, handlersByActionType), defaultHandler);
    };
    reducer.build = function () {
        return getReducerFunction(initialState, __assign({}, handlersByActionType));
    };
    return reducer;
}
function getReducerFunction(initialState, handlersByActionType, defaultHandler) {
    return function (state, action) {
        if (state === void 0) { state = initialState; }
        var handler = handlersByActionType[action.type] || defaultHandler;
        return handler ? handler(state, action) : state;
    };
}


/***/ })

}]);
//# sourceMappingURL=node_modules_typescript-fsa-reducers_dist_index_js.1072374f09474598fc6f.js.map