{"version":3,"file":"lite_ipykernel-extension_lib_index_js-_67640.3979ebb100afdcc1993e.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAC2D;AACwB;AACtB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uEAAY,EAAE,4FAAiC;AAC9D;AACA,wBAAwB,wEAAqB;AAC7C,kCAAkC,uEAAoB,6BAA6B;AACnF;AACA,2BAA2B,+DAAY;AACvC;AACA,uDAAuD,+DAAY;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8DAAW;AAC7C,iBAAiB;AACjB,aAAa;AACb;AACA,wBAAwB,gBAAgB,QAAQ,+UAA0C;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,iEAAe,OAAO,EAAC","sources":["webpack://@datalayer/jupyter-react/../lite/ipykernel-extension/lib/index.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { IServiceWorkerRegistrationWrapper, } from '@datalayer/jupyterlite-server';\nimport { IKernelSpecs } from '@datalayer/jupyterlite-kernel';\n/**\n * The default CDN fallback for Pyodide\n */\nconst PYODIDE_CDN_URL = 'https://cdn.jsdelivr.net/pyodide/v0.20.0/full/pyodide.js';\n/**\n * The id for the extension, and key in the litePlugins.\n */\nconst PLUGIN_ID = '@datalayer/jupyterlite-ipykernel-extension:kernel';\n/**\n * A plugin to register the Pyodide kernel.\n */\nconst kernel = {\n    id: PLUGIN_ID,\n    autoStart: true,\n    requires: [IKernelSpecs, IServiceWorkerRegistrationWrapper],\n    activate: (app, kernelspecs, serviceWorkerRegistrationWrapper) => {\n        const baseUrl = PageConfig.getBaseUrl();\n        const config = JSON.parse(PageConfig.getOption('litePluginSettings') || '{}')[PLUGIN_ID] || {};\n        const url = config.pyodideUrl || PYODIDE_CDN_URL;\n        const pyodideUrl = URLExt.parse(url).href;\n        const rawPipUrls = config.pipliteUrls || [];\n        const pipliteUrls = rawPipUrls.map((pipUrl) => URLExt.parse(pipUrl).href);\n        const disablePyPIFallback = !!config.disablePyPIFallback;\n        kernelspecs.register({\n            spec: {\n                name: 'python',\n                display_name: 'Python (Pyodide)',\n                language: 'python',\n                argv: [],\n                resources: {\n                    'logo-32x32': 'TODO',\n                    'logo-64x64': URLExt.join(baseUrl, '/kernelspecs/python.png'),\n                },\n            },\n            create: async (options) => {\n                const { PyoliteKernel } = await import('@datalayer/jupyterlite-ipykernel');\n                return new PyoliteKernel({\n                    ...options,\n                    pyodideUrl,\n                    pipliteUrls,\n                    disablePyPIFallback,\n                    mountDrive: serviceWorkerRegistrationWrapper.enabled,\n                });\n            },\n        });\n    },\n};\nconst plugins = [kernel];\nexport default plugins;\n"],"names":[],"sourceRoot":""}