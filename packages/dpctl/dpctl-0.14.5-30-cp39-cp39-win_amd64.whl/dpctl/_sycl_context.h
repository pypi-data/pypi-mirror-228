/* Generated by Cython 0.29.36 */

#ifndef __PYX_HAVE__dpctl___sycl_context
#define __PYX_HAVE__dpctl___sycl_context

#include "Python.h"
struct Py_SyclContextObject;
struct PySyclContextObject;

/* "dpctl/_sycl_context.pxd":29
 * 
 * 
 * cdef public api class _SyclContext [             # <<<<<<<<<<<<<<
 *     object Py_SyclContextObject,
 *     type Py_SyclContextType
 */
struct Py_SyclContextObject {
  PyObject_HEAD
  DPCTLSyclContextRef _ctxt_ref;
};

/* "dpctl/_sycl_context.pxd":38
 * 
 * 
 * cdef public api class SyclContext(_SyclContext) [             # <<<<<<<<<<<<<<
 *     object PySyclContextObject,
 *     type PySyclContextType
 */
struct PySyclContextObject {
  struct Py_SyclContextObject __pyx_base;
  struct __pyx_vtabstruct_5dpctl_13_sycl_context_SyclContext *__pyx_vtab;
};

#ifndef __PYX_HAVE_API__dpctl___sycl_context

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C DL_IMPORT(PyTypeObject) Py_SyclContextType;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) PySyclContextType;

#endif /* !__PYX_HAVE_API__dpctl___sycl_context */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC init_sycl_context(void);
#else
PyMODINIT_FUNC PyInit__sycl_context(void);
#endif

#endif /* !__PYX_HAVE__dpctl___sycl_context */
