/* Generated by Cython 0.29.36 */

#ifndef __PYX_HAVE__dpctl___sycl_queue
#define __PYX_HAVE__dpctl___sycl_queue

#include "Python.h"
struct Py_SyclQueueObject;
struct PySyclQueueObject;

/* "dpctl/_sycl_queue.pxd":34
 * cdef void default_async_error_handler(int) nogil except *
 * 
 * cdef public api class _SyclQueue [             # <<<<<<<<<<<<<<
 *     object Py_SyclQueueObject, type Py_SyclQueueType
 * ]:
 */
struct Py_SyclQueueObject {
  PyObject_HEAD
  DPCTLSyclQueueRef _queue_ref;
  struct PySyclContextObject *_context;
  struct PySyclDeviceObject *_device;
};

/* "dpctl/_sycl_queue.pxd":44
 * 
 * 
 * cdef public api class SyclQueue (_SyclQueue) [             # <<<<<<<<<<<<<<
 *     object PySyclQueueObject, type PySyclQueueType
 * ]:
 */
struct PySyclQueueObject {
  struct Py_SyclQueueObject __pyx_base;
  struct __pyx_vtabstruct_5dpctl_11_sycl_queue_SyclQueue *__pyx_vtab;
};

#ifndef __PYX_HAVE_API__dpctl___sycl_queue

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C DL_IMPORT(PyTypeObject) Py_SyclQueueType;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) PySyclQueueType;

#endif /* !__PYX_HAVE_API__dpctl___sycl_queue */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC init_sycl_queue(void);
#else
PyMODINIT_FUNC PyInit__sycl_queue(void);
#endif

#endif /* !__PYX_HAVE__dpctl___sycl_queue */
