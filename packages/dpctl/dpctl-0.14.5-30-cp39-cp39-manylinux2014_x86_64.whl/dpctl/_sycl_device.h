/* Generated by Cython 0.29.36 */

#ifndef __PYX_HAVE__dpctl___sycl_device
#define __PYX_HAVE__dpctl___sycl_device

#include "Python.h"
struct Py_SyclDeviceObject;
struct PySyclDeviceObject;

/* "dpctl/_sycl_device.pxd":32
 * 
 * 
 * cdef public api class _SyclDevice [             # <<<<<<<<<<<<<<
 *     object Py_SyclDeviceObject,
 *     type Py_SyclDeviceType
 */
struct Py_SyclDeviceObject {
  PyObject_HEAD
  DPCTLSyclDeviceRef _device_ref;
  char const *_vendor;
  char const *_name;
  char const *_driver_version;
  size_t *_max_work_item_sizes;
};

/* "dpctl/_sycl_device.pxd":45
 * 
 * 
 * cdef public api class SyclDevice(_SyclDevice) [             # <<<<<<<<<<<<<<
 *     object PySyclDeviceObject,
 *     type PySyclDeviceType
 */
struct PySyclDeviceObject {
  struct Py_SyclDeviceObject __pyx_base;
  struct __pyx_vtabstruct_5dpctl_12_sycl_device_SyclDevice *__pyx_vtab;
};

#ifndef __PYX_HAVE_API__dpctl___sycl_device

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C DL_IMPORT(PyTypeObject) Py_SyclDeviceType;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) PySyclDeviceType;

#endif /* !__PYX_HAVE_API__dpctl___sycl_device */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC init_sycl_device(void);
#else
PyMODINIT_FUNC PyInit__sycl_device(void);
#endif

#endif /* !__PYX_HAVE__dpctl___sycl_device */
