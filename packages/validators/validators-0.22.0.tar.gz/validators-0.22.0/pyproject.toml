####################
#   Build System   #
####################

[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

####################
#     Metadata     #
####################

[project]
name = "validators"
version = "0.22.0"
description = "Python Data Validation for Humansâ„¢"
authors = [{ name = "Konsta Vesterinen", email = "konsta@fastmonkeys.com" }]
license = { text = "MIT" }
readme = "README.md"
keywords = ["validation", "validator", "python-validator"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = []

[project.urls]
Homepage = "https://python-validators.github.io/validators"
Documentation = "https://python-validators.github.io/validators"
Repository = "https://github.com/python-validators/validators"
Changelog = "https://github.com/python-validators/validators/blob/master/CHANGES.md"

###########################
#  Optional Dependencies  #
###########################

[project.optional-dependencies]
docs-offline = ["myst-parser>=2.0.0", "pypandoc-binary>=1.11", "sphinx>=7.1.1"]
docs-online = [
    "mkdocs>=1.5.2",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "mkdocs-material>=9.2.6",
    "mkdocstrings[python]>=0.22.0",
    "pyaml>=23.7.0",
]
hooks = ["pre-commit>=3.3.3"]
package = ["build>=1.0.0", "twine>=4.0.2"]
runner = ["tox>=4.11.1"]
sast = ["bandit[toml]>=1.7.5"]
testing = ["pytest>=7.4.0"]
tooling = ["black>=23.7.0", "ruff>=0.0.287", "pyright>=1.1.325"]
tooling-extras = ["pyaml>=23.7.0", "pypandoc-binary>=1.11", "pytest>=7.4.0"]

####################
#  Configurations  #
####################

[tool.setuptools.packages.find]
where = ["src"]
include = ["validators*"]
namespaces = false

[tool.bandit]
exclude_dirs = [
    ".github",
    ".pytest_cache",
    ".tox",
    ".venv",
    ".vscode",
    "site",
    "tests",
]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]

[tool.pyright]
extraPaths = ["src"]
exclude = ["**/__pycache__", ".pytest_cache/", ".tox/", ".venv/", "site/"]
pythonVersion = "3.8"
pythonPlatform = "All"
typeCheckingMode = "strict"

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.ruff]
select = [
    # Pyflakes
    "F",
    # pycodestyle
    "W",
    "E",
    # mccabe
    # C90
    # isort
    "I",
    # pep8-naming
    "N",
    # pydocstyle
    "D",
]
line-length = 100
target-version = "py38"
extend-exclude = ["**/__pycache__", ".pytest_cache", "site"]

[tool.ruff.isort]
# case-sensitive = true
combine-as-imports = true
force-sort-within-sections = true
force-wrap-aliases = true
known-local-folder = ["src"]
relative-imports-order = "closest-to-furthest"

[tool.ruff.pydocstyle]
convention = "google"

[tool.tox]
legacy_tox_ini = """
[tox]
requires =
    tox>=4
env_list = lint, type, format, sast, py{38,39,310,311}

[testenv:lint]
description = ruff linter
deps =
    ruff
commands = ruff check .

[testenv:type]
description = pyright type checker
deps =
    pyright
    pyaml
    pypandoc-binary
    pytest
commands = pyright .

[testenv:format]
description = code formatter
deps =
    black
commands = black .

[testenv:sast]
deps =
    bandit[toml]
commands = bandit -c pyproject.toml -r .

[testenv]
description = unit tests
deps =
    pytest
commands = pytest .
"""
