/*! For license information please see 66640-sgseq8KisP0.js.LICENSE.txt */
export const id=66640;export const ids=[66640];export const modules={54040:(e,t,i)=>{var s=i(43204),n=i(79932),o=i(58417),a=i(39274);let d=class extends o.A{};d.styles=[a.W],d=(0,s.__decorate)([(0,n.Mo)("mwc-checkbox")],d)},1819:(e,t,i)=>{var s=i(43204),n=i(79932),o=i(8485),a=i(92038);let d=class extends o.a{};d.styles=[a.W],d=(0,s.__decorate)([(0,n.Mo)("mwc-formfield")],d)},46628:(e,t,i)=>{i.d(t,{r:()=>s});const s={title:"AI-Speaker",views:[{badges:[],cards:[{entities:[{entity:"sensor.status_serwisu_zigbee2mqtt"},{entity:"sensor.wersja_zigbee2mqtt"},{entity:"sensor.wersja_kordynatora"},{type:"divider"},{entity:"switch.zigbee_tryb_parowania"},{entity:"timer.zigbee_permit_join"},{type:"divider"},{entity:"input_text.zigbee2mqtt_old_name"},{entity:"input_text.zigbee2mqtt_new_name"},{entity:"script.zigbee2mqtt_rename"},{type:"divider"},{entity:"input_text.zigbee2mqtt_remove"},{entity:"script.zigbee2mqtt_remove"}],show_header_toggle:!1,title:"Zigbee",type:"entities"},{entity:"sensor.zigbee2mqtt_networkmap",type:"ais-zigbee2mqtt"}],icon:"mdi:zigbee",path:"aiszigbee",title:"zigbee",visible:!1}]}},66640:(e,t,i)=>{i.a(e,(async(e,s)=>{try{i.r(t);var n=i(17463),o=i(34541),a=i(47838),d=i(68144),r=i(79932),l=(i(39841),i(27289),i(12730),i(54040),i(1819),i(48932),i(22098),i(46628)),c=i(11654),h=i(10009),u=e([h]);h=(u.then?(await u)():u)[0];(0,n.Z)([(0,r.Mo)("ha-panel-aiszigbee")],(function(e,t){class i extends t{constructor(...t){super(...t),e(this)}}return{F:i,d:[{kind:"field",decorators:[(0,r.Cb)()],key:"hass",value:void 0},{kind:"field",decorators:[(0,r.Cb)({type:Boolean,reflect:!0})],key:"narrow",value:void 0},{kind:"field",decorators:[(0,r.Cb)()],key:"_columns",value:void 0},{kind:"field",key:"mqls",value:void 0},{kind:"method",key:"_updateColumns",value:function(){const e=this.mqls.reduce(((e,t)=>e+Number(t.matches)),0);this._columns=Math.max(1,e-Number(!this.narrow&&"docked"===this.hass.dockedSidebar))}},{kind:"method",key:"updated",value:function(e){if((0,o.Z)((0,a.Z)(i.prototype),"updated",this).call(this,e),e.has("narrow"))return void this._updateColumns();if(!e.has("hass"))return;const t=e.get("hass");t&&this.hass.dockedSidebar!==t.dockedSidebar&&this._updateColumns()}},{kind:"method",key:"firstUpdated",value:function(){this._updateColumns=this._updateColumns.bind(this),this.mqls=[300,600,900,1200].map((e=>{const t=matchMedia(`(min-width: ${e}px)`);return t.addListener(this._updateColumns),t})),this._updateColumns()}},{kind:"method",key:"_showHelp",value:async function(){window.open("https://www.ai-speaker.com/docs/ais_app_integration_zigbee","_blank").focus()}},{kind:"method",key:"render",value:function(){const e={config:l.r,rawConfig:l.r,editMode:!1,urlPath:null,enableFullEditMode:()=>{},mode:"storage",locale:this.hass.locale,saveConfig:async()=>{},deleteConfig:async()=>{},setEditMode:()=>{}};return d.dy` <app-header-layout has-scrolling-region> <app-header fixed slot="header"> <app-toolbar> <ha-menu-button .hass="${this.hass}" .narrow="${this.narrow}"></ha-menu-button> <div main-title>Zigbee</div> <ha-icon-button label="Pomoc" icon="hass:information-outline" @click="${this._showHelp}"></ha-icon-button> </app-toolbar> </app-header> <hui-view .hass="${this.hass}" .lovelace="${e}" index="0" .columns="${this._columns}"></hui-view> </app-header-layout> `}},{kind:"get",static:!0,key:"styles",value:function(){return[c.Qx,d.iv`.content{padding:16px;display:flex;box-sizing:border-box}:host(:not([narrow])) .content{height:calc(100vh - 64px)}:host([narrow]) .content{flex-direction:column-reverse;padding:8px 0 0 0}:host([narrow]) .calendar-list{margin-bottom:24px;width:100%;padding-right:0}`]}}]}}),d.oi);s()}catch(e){s(e)}}))}};
//# sourceMappingURL=66640-sgseq8KisP0.js.map