from typing import List
import ghidra.app.util.bin.format.golang.structmapping
import ghidra.app.util.bin.format.golang.structmapping.StructureMappingInfo
import ghidra.program.model.data
import java.lang
import java.lang.reflect


class StructureMappingInfo(object):
    """
    Contains immutable information about a structure mapped class needed to deserialize
     a new object from the data found in a Ghidra program.
    """









    def assignContextFieldValues(self, context: ghidra.app.util.bin.format.golang.structmapping.StructureContext) -> None:
        """
        Initializes any {@link ContextField} fields in a new structure instance.
        @param context
        @throws IOException
        """
        ...

    def createStructureDataType(self, context: ghidra.app.util.bin.format.golang.structmapping.StructureContext) -> ghidra.program.model.data.Structure: ...

    def equals(self, __a0: object) -> bool: ...

    @staticmethod
    def fromClass(targetClass: java.lang.Class, structDataType: ghidra.program.model.data.Structure) -> ghidra.app.util.bin.format.golang.structmapping.StructureMappingInfo: ...

    def getAfterMethods(self) -> List[java.lang.reflect.Method]: ...

    def getClass(self) -> java.lang.Class: ...

    def getDescription(self) -> unicode: ...

    def getFields(self) -> List[ghidra.app.util.bin.format.golang.structmapping.FieldMappingInfo]: ...

    def getInstanceCreator(self) -> ghidra.app.util.bin.format.golang.structmapping.StructureMappingInfo.ObjectInstanceCreator: ...

    def getMarkupFuncs(self) -> List[ghidra.app.util.bin.format.golang.structmapping.StructureMarkupFunction]: ...

    def getStructureDataType(self) -> ghidra.program.model.data.Structure: ...

    @staticmethod
    def getStructureDataTypeNameForClass(targetClass: java.lang.Class) -> unicode: ...

    def getStructureLength(self) -> int: ...

    def getStructureName(self) -> unicode: ...

    def getTargetClass(self) -> java.lang.Class: ...

    def hashCode(self) -> int: ...

    def notify(self) -> None: ...

    def notifyAll(self) -> None: ...

    def readStructure(self, context: ghidra.app.util.bin.format.golang.structmapping.StructureContext) -> None: ...

    def recoverStructureContext(self, structureInstance: object) -> ghidra.app.util.bin.format.golang.structmapping.StructureContext: ...

    def toString(self) -> unicode: ...

    @overload
    def wait(self) -> None: ...

    @overload
    def wait(self, __a0: long) -> None: ...

    @overload
    def wait(self, __a0: long, __a1: int) -> None: ...

    @property
    def afterMethods(self) -> List[object]: ...

    @property
    def description(self) -> unicode: ...

    @property
    def fields(self) -> List[object]: ...

    @property
    def instanceCreator(self) -> ghidra.app.util.bin.format.golang.structmapping.StructureMappingInfo.ObjectInstanceCreator: ...

    @property
    def markupFuncs(self) -> List[object]: ...

    @property
    def structureDataType(self) -> ghidra.program.model.data.Structure: ...

    @property
    def structureLength(self) -> int: ...

    @property
    def structureName(self) -> unicode: ...

    @property
    def targetClass(self) -> java.lang.Class: ...