Metadata-Version: 2.1
Name: pnnx
Version: 0.0.4
Summary: pnnx python wrapper
Author: Qianshu(Ruichen Bao)
Author-email: <ruichenbao@qq.com>
Keywords: python,ncnn,pnnx
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown


# pnnx_package
pnnx python wrapper



## How to use

```shell
pip install pnnx
```


**example**

```python
import pnnx
import torch
import torchvision

def test_pnnx_export():
    resnet_test_model = torchvision.models.resnet18()
    x = torch.rand(1, 3, 224, 224)
    pnnx.export(resnet_test_model, x)

if __name__ == "__main__":
    test_pnnx_export()
```

You should combine inputs use **tuple**, e.g. inputshape, moduleop...
Here is a more complex example:
```
    pnnx.export(your_model, inputshape=(x,y), inputshape2=(x2,y2), optlevel=0, pnnxparam="model.pnnx.param",  device= "gpu",  moduleop =("models.common.Focus","models.yolo.Detect"))
```
