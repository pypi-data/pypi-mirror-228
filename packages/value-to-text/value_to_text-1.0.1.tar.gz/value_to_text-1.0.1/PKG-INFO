Metadata-Version: 2.1
Name: value_to_text
Version: 1.0.1
Summary: classe para converter valor monetario para texto por extenso... e percentual por extenso
Home-page: https://github.com/edenilsonsantos/value_to_text
Author: Edenilson Fernandes dos Santos
Author-email: santoeen@gmail.com
License: MIT License
Project-URL: repository, https://github.com/edenilsonsantos/value_to_text
Keywords: value_to_text write_value numero para texto valor para texto num_to_text num2text
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Developers
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE

# Exemplos de utilizacao da bilioteca value_to_text

```python
# linha1: update pip 
# linha2: install lib value_to_text via pip
python -m pip install --upgrade pip
pip install value_to_text
```

```python
# Escreve por extenso valores monetÃ¡rios atÃ© 999 Bilhoes
# Escreve por extenso valores nÃ£o monetÃ¡rios atÃ© 999 Bilhoes
# Escreve por extenso percentual de taxas de juros
# Possui parametros para troca de moeda e ou separadores
# Python puro, nÃ£o exige demais dependÃªncias de libs externas
```
## import a biblioteca value_to_text
```python
from value_to_text.write_value import Value_to_text
value_to_text = Value_to_text()
```

## mÃ©todo num_to_text
# Escreve por extenso valores monetÃ¡rios atÃ© 999 Bilhoes
```python
text = value_to_text.num_to_text( 100025545465.45 )
print(text)
'''result...
cem bilhÃµes e vinte e cinco milhÃµes e quinhentos e quarenta e 
cinco mil e quatrocentos e sessenta e cinco reais e quarenta e cinco centavos
'''

text = value_to_text.num_to_text('9.534,85', moeda_unit='dolar', moeda_plural='dolares')
print(text)
'''result...
nove mil e quinhentos e trinta e quatro dolares e oitenta e cinco centavos
'''

text = value_to_text.num_to_text('9.534,85', monetario=False)
print(text)
'''result...
nove mil e quinhentos e trinta e quatro virgula oitenta e cinco
'''
```

## mÃ©todo perc_to_text
# Escreve por extenso percentual de taxas de juros
```python
text = value_to_text.perc_to_text( 0.38 )
print(text)
'''result...
zero virgula trinta e oito por cento
'''

text = value_to_text.perc_to_text( 25.10, nome_separador='ponto')
print(text)
'''result...
vinte e cinco ponto dez por cento
'''
```


